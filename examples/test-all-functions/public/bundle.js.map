{
  "version": 3,
  "sources": ["../../../src/runtime/debug.ts", "../../../src/runtime/state.ts", "../../../src/runtime/dom.ts", "../../../src/runtime/renderer.ts", "../../../src/runtime/helpers/layout.ts", "../../../src/runtime/helpers/basic_elements.ts", "../../../src/runtime/helpers/typography.ts", "../../../src/runtime/helpers/forms.ts", "../../../src/runtime/helpers/semantic.ts", "../../../src/runtime/helpers/table.ts", "../src/App.ts", "../src/index.ts"],
  "sourcesContent": ["/**\n * ZenWeb Runtime Debugging\n * Debug utilities for development\n */\n\nlet debugEnabled = false;\n\nexport function enableDebug(): void {\n  debugEnabled = true;\n  console.log('[ZenWeb Debug] Debugging enabled');\n}\n\nexport function disableDebug(): void {\n  debugEnabled = false;\n}\n\nexport function isDebugEnabled(): boolean {\n  return debugEnabled;\n}\n\nexport function debugLog(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.log(`[${timestamp}] [DEBUG:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugWarn(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.warn(`[${timestamp}] [WARN:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugError(category: string, message: string, error?: Error): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.error(`[${timestamp}] [ERROR:${category}] ${message}`, error || '');\n  }\n}\n\n// Enable debug mode if URL has ?debug=true or localStorage has debug flag\nif (typeof window !== 'undefined') {\n  const urlParams = new URLSearchParams(window.location.search);\n  const hasDebugParam = urlParams.get('debug') === 'true';\n  const hasDebugStorage = localStorage.getItem('zenweb-debug') === 'true';\n  \n  if (hasDebugParam || hasDebugStorage) {\n    enableDebug();\n  }\n}\n", "/**\n * ZenWeb State Management\n * Vanilla JavaScript Proxy-based reactive state (no React hooks)\n */\n\nimport { debugLog, debugWarn } from './debug.js';\n\ntype Listener = () => void;\ntype EffectFunction = () => void;\n\n// Track current effect being executed for dependency tracking\nlet currentEffect: EffectFunction | null = null;\nconst effectDependencies = new WeakMap<EffectFunction, Set<any>>();\n\n/**\n * Create a reactive state object using Proxy\n * Any property access is tracked, any property change triggers updates\n */\nexport function state<T extends object>(initialState: T): T {\n  const listeners = new Set<Listener>();\n  const dependencies = new Map<string | symbol, Set<EffectFunction>>();\n\n  const handler: ProxyHandler<T> = {\n    get(target, prop, receiver) {\n      // Track dependency if we're inside an effect\n      if (currentEffect) {\n        if (!dependencies.has(prop)) {\n          dependencies.set(prop, new Set());\n        }\n        dependencies.get(prop)!.add(currentEffect);\n        \n        // Track reverse dependency\n        if (!effectDependencies.has(currentEffect)) {\n          effectDependencies.set(currentEffect, new Set());\n        }\n        effectDependencies.get(currentEffect)!.add(target);\n        \n        debugLog('State', `Tracking dependency: ${String(prop)}`);\n      }\n      \n      return Reflect.get(target, prop, receiver);\n    },\n\n    set(target, prop, value, receiver) {\n      const oldValue = Reflect.get(target, prop, receiver);\n      \n      // Only update if value changed\n      if (Object.is(oldValue, value)) {\n        return true;\n      }\n\n      const result = Reflect.set(target, prop, value, receiver);\n      \n      if (result) {\n        debugLog('State', `Property ${String(prop)} changed from ${oldValue} to ${value}`);\n        \n        // Notify property-specific effects\n        const propEffects = dependencies.get(prop);\n        if (propEffects) {\n          propEffects.forEach(effect => {\n            queueMicrotask(() => {\n              try {\n                effect();\n              } catch (error) {\n                console.error('Error in effect:', error);\n              }\n            });\n          });\n        }\n        \n        // Notify global listeners\n        listeners.forEach(listener => {\n          queueMicrotask(() => {\n            try {\n              listener();\n            } catch (error) {\n              console.error('Error in listener:', error);\n            }\n          });\n        });\n      }\n      \n      return result;\n    }\n  };\n\n  const proxy = new Proxy(initialState, handler);\n  \n  // Store listeners reference for manual subscription\n  (proxy as any).__listeners = listeners;\n  \n  return proxy;\n}\n\n/**\n * Create a computed value that automatically updates when dependencies change\n */\nexport function computed<T>(computeFn: () => T): { value: T } {\n  let cachedValue: T;\n  let isInitialized = false;\n\n  const effectFn: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = effectFn;\n    try {\n      cachedValue = computeFn();\n      isInitialized = true;\n      debugLog('Computed', 'Recomputed value:', cachedValue);\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  // Run once to establish dependencies and get initial value\n  effectFn();\n\n  return {\n    get value() {\n      if (!isInitialized) {\n        effectFn();\n      }\n      return cachedValue;\n    }\n  };\n}\n\n/**\n * Run an effect when reactive dependencies change\n */\nexport function effect(effectFn: EffectFunction): () => void {\n  const wrappedEffect: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = wrappedEffect;\n    try {\n      effectFn();\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  // Run immediately to establish dependencies\n  wrappedEffect();\n  \n  // Return cleanup function\n  return () => {\n    const deps = effectDependencies.get(wrappedEffect);\n    if (deps) {\n      deps.clear();\n      effectDependencies.delete(wrappedEffect);\n    }\n  };\n}\n\n/**\n * Subscribe to state changes manually\n */\nexport function subscribe(stateObj: any, listener: Listener): () => void {\n  if (stateObj.__listeners) {\n    stateObj.__listeners.add(listener);\n    debugLog('State', 'Added listener to state');\n    \n    return () => {\n      stateObj.__listeners.delete(listener);\n      debugLog('State', 'Removed listener from state');\n    };\n  }\n  \n  debugWarn('State', 'Object is not a reactive state');\n  return () => {};\n}\n\n/**\n * Batch multiple state updates together\n */\nlet batchDepth = 0;\nconst pendingEffects = new Set<EffectFunction>();\n\nexport function batch(fn: () => void): void {\n  batchDepth++;\n  try {\n    fn();\n  } finally {\n    batchDepth--;\n    if (batchDepth === 0) {\n      // Execute all pending effects\n      pendingEffects.forEach(effect => {\n        queueMicrotask(() => {\n          try {\n            effect();\n          } catch (error) {\n            console.error('Error in batched effect:', error);\n          }\n        });\n      });\n      pendingEffects.clear();\n    }\n  }\n}\n", "/**\n * ZenWeb DOM Manipulation\n * Direct DOM element creation and manipulation (vanilla JavaScript)\n * No Virtual DOM - just real DOM elements\n */\n\nimport { debugLog } from './debug.js';\n\nexport type DOMChild = HTMLElement | Text | string | number | boolean | null | undefined;\nexport type DOMChildren = DOMChild | DOMChild[];\n\nexport interface DOMProps {\n  [key: string]: any;\n  class?: string;\n  className?: string;\n  id?: string;\n  style?: string | Partial<CSSStyleDeclaration>;\n  onClick?: (event: MouseEvent) => void;\n  onInput?: (event: Event) => void;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  onKeyUp?: (event: KeyboardEvent) => void;\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  ref?: { current: HTMLElement | null };\n}\n\n/**\n * Create a real DOM element (vanilla JavaScript)\n * This is the core function that replaces the h() virtual DOM function\n */\nexport function createElement(\n  tag: string,\n  props: DOMProps | null = null,\n  ...children: DOMChildren[]\n): HTMLElement {\n  const element = document.createElement(tag);\n  \n  // Apply props\n  if (props) {\n    applyProps(element, props);\n  }\n  \n  // Append children\n  appendChildren(element, children);\n  \n  debugLog('DOM', `Created element: ${tag}`);\n  return element;\n}\n\n/**\n * Create a text node\n */\nexport function createTextNode(text: string | number): Text {\n  return document.createTextNode(String(text));\n}\n\n/**\n * Apply properties to a DOM element\n */\nexport function applyProps(element: HTMLElement, props: DOMProps): void {\n  for (const [key, value] of Object.entries(props)) {\n    if (value === null || value === undefined) {\n      continue;\n    }\n    \n    // Handle event listeners\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventName = key.slice(2).toLowerCase();\n      element.addEventListener(eventName, value as EventListener);\n      debugLog('DOM', `Added event listener: ${eventName}`);\n    }\n    // Handle class/className\n    else if (key === 'class' || key === 'className') {\n      element.className = value;\n    }\n    // Handle style\n    else if (key === 'style') {\n      if (typeof value === 'string') {\n        element.setAttribute('style', value);\n      } else if (typeof value === 'object') {\n        Object.assign(element.style, value);\n      }\n    }\n    // Handle ref\n    else if (key === 'ref' && typeof value === 'object' && 'current' in value) {\n      value.current = element;\n    }\n    // Handle special properties\n    else if (key === 'value') {\n      (element as any).value = value;\n    }\n    else if (key === 'checked') {\n      (element as any).checked = value;\n    }\n    // Handle data attributes\n    else if (key.startsWith('data-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle aria attributes\n    else if (key.startsWith('aria-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle other attributes\n    else {\n      element.setAttribute(key, String(value));\n    }\n  }\n}\n\n/**\n * Update properties on a DOM element\n */\nexport function updateProps(element: HTMLElement, oldProps: DOMProps, newProps: DOMProps): void {\n  // Remove old props\n  for (const key in oldProps) {\n    if (!(key in newProps)) {\n      removeProp(element, key, oldProps[key]);\n    }\n  }\n  \n  // Add/update new props\n  for (const key in newProps) {\n    if (oldProps[key] !== newProps[key]) {\n      // Remove old event listener if it's an event\n      if (key.startsWith('on') && typeof oldProps[key] === 'function') {\n        const eventName = key.slice(2).toLowerCase();\n        element.removeEventListener(eventName, oldProps[key] as EventListener);\n      }\n      \n      // Apply new prop\n      applyProps(element, { [key]: newProps[key] });\n    }\n  }\n}\n\n/**\n * Remove a property from a DOM element\n */\nexport function removeProp(element: HTMLElement, key: string, value: any): void {\n  if (key.startsWith('on') && typeof value === 'function') {\n    const eventName = key.slice(2).toLowerCase();\n    element.removeEventListener(eventName, value as EventListener);\n  } else if (key === 'class' || key === 'className') {\n    element.className = '';\n  } else if (key === 'style') {\n    element.removeAttribute('style');\n  } else if (key !== 'ref') {\n    element.removeAttribute(key);\n  }\n}\n\n/**\n * Append children to a DOM element\n */\nexport function appendChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  const flatChildren = children.flat(Infinity) as DOMChild[];\n  \n  for (const child of flatChildren) {\n    if (child === null || child === undefined || child === false || child === true) {\n      continue;\n    }\n    \n    if (typeof child === 'string' || typeof child === 'number') {\n      parent.appendChild(createTextNode(child));\n    } else if (child instanceof HTMLElement || child instanceof Text) {\n      parent.appendChild(child);\n    }\n  }\n}\n\n/**\n * Replace all children of an element\n */\nexport function replaceChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  // Clear existing children\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n  \n  // Append new children\n  appendChildren(parent, children);\n}\n\n/**\n * Mount an element to a container\n */\nexport function mount(element: HTMLElement, container: HTMLElement): void {\n  container.appendChild(element);\n  debugLog('DOM', 'Mounted element to container');\n}\n\n/**\n * Unmount an element from its parent\n */\nexport function unmount(element: HTMLElement): void {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n    debugLog('DOM', 'Unmounted element');\n  }\n}\n\n/**\n * Create a ref object for accessing DOM elements\n */\nexport function createRef<T extends HTMLElement = HTMLElement>(): { current: T | null } {\n  return { current: null };\n}\n\n/**\n * Query selector helper\n */\nexport function $(selector: string, parent: HTMLElement | Document = document): HTMLElement | null {\n  return parent.querySelector(selector);\n}\n\n/**\n * Query selector all helper\n */\nexport function $$(selector: string, parent: HTMLElement | Document = document): HTMLElement[] {\n  return Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * Add class to element\n */\nexport function addClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.add(...classNames);\n}\n\n/**\n * Remove class from element\n */\nexport function removeClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.remove(...classNames);\n}\n\n/**\n * Toggle class on element\n */\nexport function toggleClass(element: HTMLElement, className: string, force?: boolean): void {\n  element.classList.toggle(className, force);\n}\n\n/**\n * Set styles on element\n */\nexport function setStyle(element: HTMLElement, styles: Partial<CSSStyleDeclaration>): void {\n  Object.assign(element.style, styles);\n}\n\n/**\n * Set attributes on element\n */\nexport function setAttributes(element: HTMLElement, attrs: Record<string, string>): void {\n  for (const [key, value] of Object.entries(attrs)) {\n    element.setAttribute(key, value);\n  }\n}\n\n/**\n * Add event listener helper\n */\nexport function on<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n  options?: AddEventListenerOptions\n): () => void {\n  element.addEventListener(event, handler as EventListener, options);\n  return () => element.removeEventListener(event, handler as EventListener, options);\n}\n\n/**\n * Remove event listener helper\n */\nexport function off<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void\n): void {\n  element.removeEventListener(event, handler as EventListener);\n}\n", "/**\n * ZenWeb Renderer\n * Main rendering engine using vanilla JavaScript (no VDOM)\n */\n\nimport { mount, unmount, replaceChildren } from './dom.js';\nimport { subscribe } from './state.js';\nimport { debugLog } from './debug.js';\n\nexport interface ComponentInstance {\n  element: HTMLElement | null;\n  container: HTMLElement | null;\n  update: () => void;\n  unmount: () => void;\n  unsubscribe?: () => void;\n}\n\nconst componentInstances = new WeakMap<Function, ComponentInstance>();\nlet renderCounter = 0;\n\n/**\n * Render a component to a container element\n * Component should return an HTMLElement\n */\nexport function render(component: Function, container: HTMLElement, props: any = {}): ComponentInstance {\n  const instance: ComponentInstance = {\n    element: null,\n    container,\n    update: () => {},\n    unmount: () => {}\n  };\n\n  const update = () => {\n    const renderId = ++renderCounter;\n    debugLog('Renderer', `Render #${renderId} starting`);\n    \n    try {\n      // Execute component function to get DOM element\n      const newElement = component(props) as HTMLElement;\n      debugLog('Renderer', `Render #${renderId} component executed`);\n\n      if (!instance.element) {\n        // Initial mount\n        debugLog('Renderer', `Render #${renderId} initial mount`);\n        mount(newElement, container);\n        instance.element = newElement;\n      } else {\n        // Update - replace old element with new one\n        debugLog('Renderer', `Render #${renderId} updating DOM`);\n        if (instance.element.parentElement) {\n          instance.element.parentElement.replaceChild(newElement, instance.element);\n        }\n        instance.element = newElement;\n      }\n      debugLog('Renderer', `Render #${renderId} complete`);\n    } catch (error) {\n      console.error('Error rendering component:', error);\n    }\n  };\n\n  const unmountFn = () => {\n    if (instance.element) {\n      unmount(instance.element);\n      instance.element = null;\n    }\n    if (instance.unsubscribe) {\n      instance.unsubscribe();\n    }\n  };\n\n  instance.update = update;\n  instance.unmount = unmountFn;\n\n  // Initial render\n  update();\n\n  componentInstances.set(component, instance);\n  return instance;\n}\n\n/**\n * Create a component that auto-updates when state changes\n */\nexport function createComponent(component: Function, stateObj?: any, props: any = {}): HTMLElement {\n  const element = component(props) as HTMLElement;\n  \n  // If state object provided, subscribe to changes and re-render\n  if (stateObj && stateObj.__listeners) {\n    const container = document.createElement('div');\n    container.appendChild(element);\n    \n    subscribe(stateObj, () => {\n      const newElement = component(props) as HTMLElement;\n      replaceChildren(container, [newElement]);\n    });\n    \n    return container;\n  }\n  \n  return element;\n}\n\n/**\n * Mount a component and return cleanup function\n */\nexport function mountComponent(component: Function, container: HTMLElement, props: any = {}): () => void {\n  const instance = render(component, container, props);\n  return () => instance.unmount();\n}\n", "/**\n * ZenWeb Layout Helpers\n * Layout and positioning components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Vertical box layout (flex column)\n */\nexport function vbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Horizontal box layout (flex row)\n */\nexport function hbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Grid layout container\n */\nexport function grid(\n  props: DOMProps & { columns?: number; gap?: string },\n  ...children: DOMChildren[]\n): HTMLElement {\n  const { columns = 1, gap = '1rem', ...restProps } = props;\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gap,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Plain container (div without flex)\n */\nexport function container(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Stack layout with z-index management\n */\nexport function stack(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Center content (both axes)\n */\nexport function center(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Flexible spacer\n */\nexport function spacer(props: DOMProps = {}): HTMLElement {\n  const style = {\n    flex: '1',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style });\n}\n\n/**\n * Flex wrap container\n */\nexport function wrap(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Scrollable container\n */\nexport function scroll(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    overflow: 'auto',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Sticky positioned container\n */\nexport function sticky(props: DOMProps & { top?: string }, ...children: DOMChildren[]): HTMLElement {\n  const { top = '0', ...restProps } = props;\n  const style = {\n    position: 'sticky',\n    top,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Fixed positioned container\n */\nexport function fixed(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'fixed',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Absolute positioned container\n */\nexport function absolute(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'absolute',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Relative positioned container\n */\nexport function relative(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n", "/**\n * ZenWeb Basic Elements\n * Basic HTML elements and components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Div element (generic container)\n */\nexport function div(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Span element (inline container)\n */\nexport function span(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('span', props, ...children);\n}\n\n/**\n * Text element\n */\nexport function text(props: DOMProps | string, content?: string): HTMLElement {\n  if (typeof props === 'string') {\n    return createElement('span', {}, props);\n  }\n  return createElement('span', props, content || '');\n}\n\n/**\n * Button element\n */\nexport function button(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('button', props, ...content);\n}\n\n/**\n * Input element\n */\nexport function input(props: DOMProps): HTMLInputElement {\n  return createElement('input', props) as HTMLInputElement;\n}\n\n/**\n * Image element\n */\nexport function image(props: DOMProps & { src: string; alt?: string; lazy?: boolean }): HTMLImageElement {\n  const imgProps = { ...props };\n  if (props.lazy) {\n    imgProps.loading = 'lazy';\n    delete imgProps.lazy;\n  }\n  return createElement('img', imgProps) as HTMLImageElement;\n}\n\n/**\n * Link/anchor element\n */\nexport function link(props: DOMProps & { href: string }, ...children: DOMChildren[]): HTMLAnchorElement {\n  return createElement('a', props, ...children) as HTMLAnchorElement;\n}\n\n/**\n * Label element\n */\nexport function label(props: DOMProps & { htmlFor?: string }, ...content: DOMChildren[]): HTMLLabelElement {\n  return createElement('label', props, ...content) as HTMLLabelElement;\n}\n\n/**\n * Paragraph element\n */\nexport function p(props: DOMProps, ...content: DOMChildren[]): HTMLParagraphElement {\n  return createElement('p', props, ...content) as HTMLParagraphElement;\n}\n\n/**\n * List element with optimized rendering\n */\nexport function list<T>(\n  props: DOMProps & {\n    items: T[];\n    renderItem: (item: T, index: number) => HTMLElement;\n    keyExtractor?: (item: T, index: number) => string | number;\n  }\n): HTMLElement {\n  const { items, renderItem, keyExtractor, ...restProps } = props;\n  const children = items.map((item, index) => {\n    const child = renderItem(item, index);\n    if (keyExtractor) {\n      child.dataset.key = String(keyExtractor(item, index));\n    }\n    return child;\n  });\n  return createElement('div', restProps, ...children);\n}\n\n/**\n * Unordered list\n */\nexport function ul(props: DOMProps, ...children: DOMChildren[]): HTMLUListElement {\n  return createElement('ul', props, ...children) as HTMLUListElement;\n}\n\n/**\n * Ordered list\n */\nexport function ol(props: DOMProps, ...children: DOMChildren[]): HTMLOListElement {\n  return createElement('ol', props, ...children) as HTMLOListElement;\n}\n\n/**\n * List item\n */\nexport function li(props: DOMProps, ...content: DOMChildren[]): HTMLLIElement {\n  return createElement('li', props, ...content) as HTMLLIElement;\n}\n\n/**\n * Horizontal rule\n */\nexport function hr(props: DOMProps = {}): HTMLHRElement {\n  return createElement('hr', props) as HTMLHRElement;\n}\n\n/**\n * Line break\n */\nexport function br(props: DOMProps = {}): HTMLBRElement {\n  return createElement('br', props) as HTMLBRElement;\n}\n\n/**\n * Description list\n */\nexport function dl(props: DOMProps, ...children: DOMChildren[]): HTMLDListElement {\n  return createElement('dl', props, ...children) as HTMLDListElement;\n}\n\n/**\n * Description term\n */\nexport function dt(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dt', props, ...content);\n}\n\n/**\n * Description definition\n */\nexport function dd(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dd', props, ...content);\n}\n", "/**\n * ZenWeb Typography Helpers\n * Text and typography elements\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Heading elements\n */\nexport function h1(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h1', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h2(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h2', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h3(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h3', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h4(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h4', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h5(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h5', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h6(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h6', props, ...content) as HTMLHeadingElement;\n}\n\n/**\n * Bold text\n */\nexport function strong(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('strong', props, ...content);\n}\n\n/**\n * Italic text\n */\nexport function em(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('em', props, ...content);\n}\n\n/**\n * Inline code\n */\nexport function code(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('code', props, ...content);\n}\n\n/**\n * Preformatted text\n */\nexport function pre(props: DOMProps, ...content: DOMChildren[]): HTMLPreElement {\n  return createElement('pre', props, ...content) as HTMLPreElement;\n}\n\n/**\n * Blockquote\n */\nexport function blockquote(props: DOMProps, ...children: DOMChildren[]): HTMLQuoteElement {\n  return createElement('blockquote', props, ...children) as HTMLQuoteElement;\n}\n\n/**\n * Highlighted text\n */\nexport function mark(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('mark', props, ...content);\n}\n\n/**\n * Small text\n */\nexport function small(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('small', props, ...content);\n}\n\n/**\n * Deleted text\n */\nexport function del(props: DOMProps, ...content: DOMChildren[]): HTMLModElement {\n  return createElement('del', props, ...content) as HTMLModElement;\n}\n\n/**\n * Inserted text\n */\nexport function ins(props: DOMProps, ...content: DOMChildren[]): HTMLModElement {\n  return createElement('ins', props, ...content) as HTMLModElement;\n}\n\n/**\n * Subscript\n */\nexport function sub(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('sub', props, ...content);\n}\n\n/**\n * Superscript\n */\nexport function sup(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('sup', props, ...content);\n}\n\n/**\n * Abbreviation\n */\nexport function abbr(props: DOMProps & { title: string }, ...content: DOMChildren[]): HTMLElement {\n  return createElement('abbr', props, ...content);\n}\n\n/**\n * Citation\n */\nexport function cite(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('cite', props, ...content);\n}\n\n/**\n * Keyboard input\n */\nexport function kbd(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('kbd', props, ...content);\n}\n\n/**\n * Sample output\n */\nexport function samp(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('samp', props, ...content);\n}\n\n/**\n * Variable\n */\nexport function varElement(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('var', props, ...content);\n}\n", "/**\n * ZenWeb Form Helpers\n * Form elements and inputs\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Form element\n */\nexport function form(props: DOMProps, ...children: DOMChildren[]): HTMLFormElement {\n  return createElement('form', props, ...children) as HTMLFormElement;\n}\n\n/**\n * Textarea element\n */\nexport function textarea(props: DOMProps, content?: string): HTMLTextAreaElement {\n  return createElement('textarea', props, content || '') as HTMLTextAreaElement;\n}\n\n/**\n * Select element\n */\nexport function select(props: DOMProps, ...children: DOMChildren[]): HTMLSelectElement {\n  return createElement('select', props, ...children) as HTMLSelectElement;\n}\n\n/**\n * Option element\n */\nexport function option(props: DOMProps & { value: string }, ...content: DOMChildren[]): HTMLOptionElement {\n  return createElement('option', props, ...content) as HTMLOptionElement;\n}\n\n/**\n * Checkbox input\n */\nexport function checkbox(props: DOMProps & { checked?: boolean }): HTMLInputElement {\n  return createElement('input', { ...props, type: 'checkbox' }) as HTMLInputElement;\n}\n\n/**\n * Radio input\n */\nexport function radio(props: DOMProps & { checked?: boolean; name?: string }): HTMLInputElement {\n  return createElement('input', { ...props, type: 'radio' }) as HTMLInputElement;\n}\n\n/**\n * Fieldset element\n */\nexport function fieldset(props: DOMProps, ...children: DOMChildren[]): HTMLFieldSetElement {\n  return createElement('fieldset', props, ...children) as HTMLFieldSetElement;\n}\n\n/**\n * Legend element\n */\nexport function legend(props: DOMProps, ...content: DOMChildren[]): HTMLLegendElement {\n  return createElement('legend', props, ...content) as HTMLLegendElement;\n}\n\n/**\n * Datalist element\n */\nexport function datalist(props: DOMProps & { id: string }, ...children: DOMChildren[]): HTMLDataListElement {\n  return createElement('datalist', props, ...children) as HTMLDataListElement;\n}\n\n/**\n * Meter element\n */\nexport function meter(props: DOMProps & { value: number; min?: number; max?: number }): HTMLMeterElement {\n  return createElement('meter', props) as HTMLMeterElement;\n}\n\n/**\n * Progress element\n */\nexport function progress(props: DOMProps & { value?: number; max?: number }): HTMLProgressElement {\n  return createElement('progress', props) as HTMLProgressElement;\n}\n\n/**\n * Output element\n */\nexport function output(props: DOMProps & { htmlFor?: string }, ...content: DOMChildren[]): HTMLOutputElement {\n  return createElement('output', props, ...content) as HTMLOutputElement;\n}\n", "/**\n * ZenWeb Semantic Elements\n * Semantic HTML5 elements\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Header section\n */\nexport function header(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('header', props, ...children);\n}\n\n/**\n * Footer section\n */\nexport function footer(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('footer', props, ...children);\n}\n\n/**\n * Navigation\n */\nexport function nav(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('nav', props, ...children);\n}\n\n/**\n * Main content\n */\nexport function main(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('main', props, ...children);\n}\n\n/**\n * Section\n */\nexport function section(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('section', props, ...children);\n}\n\n/**\n * Article\n */\nexport function article(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('article', props, ...children);\n}\n\n/**\n * Aside/Sidebar\n */\nexport function aside(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('aside', props, ...children);\n}\n\n/**\n * Figure with caption\n */\nexport function figure(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('figure', props, ...children);\n}\n\n/**\n * Figure caption\n */\nexport function figcaption(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('figcaption', props, ...content);\n}\n\n/**\n * Time element\n */\nexport function time(props: DOMProps & { datetime?: string }, ...content: DOMChildren[]): HTMLTimeElement {\n  return createElement('time', props, ...content) as HTMLTimeElement;\n}\n\n/**\n * Address element\n */\nexport function address(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('address', props, ...children);\n}\n\n/**\n * Details disclosure\n */\nexport function details(props: DOMProps & { open?: boolean }, ...children: DOMChildren[]): HTMLDetailsElement {\n  return createElement('details', props, ...children) as HTMLDetailsElement;\n}\n\n/**\n * Details summary\n */\nexport function summary(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('summary', props, ...content);\n}\n\n/**\n * Dialog element\n */\nexport function dialog(props: DOMProps & { open?: boolean }, ...children: DOMChildren[]): HTMLDialogElement {\n  return createElement('dialog', props, ...children) as HTMLDialogElement;\n}\n", "/**\n * ZenWeb Table Elements\n * Table-related elements\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Table container\n */\nexport function table(props: DOMProps, ...children: DOMChildren[]): HTMLTableElement {\n  return createElement('table', props, ...children) as HTMLTableElement;\n}\n\n/**\n * Table head\n */\nexport function thead(props: DOMProps, ...children: DOMChildren[]): HTMLTableSectionElement {\n  return createElement('thead', props, ...children) as HTMLTableSectionElement;\n}\n\n/**\n * Table body\n */\nexport function tbody(props: DOMProps, ...children: DOMChildren[]): HTMLTableSectionElement {\n  return createElement('tbody', props, ...children) as HTMLTableSectionElement;\n}\n\n/**\n * Table footer\n */\nexport function tfoot(props: DOMProps, ...children: DOMChildren[]): HTMLTableSectionElement {\n  return createElement('tfoot', props, ...children) as HTMLTableSectionElement;\n}\n\n/**\n * Table row\n */\nexport function tr(props: DOMProps, ...children: DOMChildren[]): HTMLTableRowElement {\n  return createElement('tr', props, ...children) as HTMLTableRowElement;\n}\n\n/**\n * Table header cell\n */\nexport function th(props: DOMProps, ...content: DOMChildren[]): HTMLTableCellElement {\n  return createElement('th', props, ...content) as HTMLTableCellElement;\n}\n\n/**\n * Table data cell\n */\nexport function td(props: DOMProps, ...content: DOMChildren[]): HTMLTableCellElement {\n  return createElement('td', props, ...content) as HTMLTableCellElement;\n}\n\n/**\n * Table caption\n */\nexport function caption(props: DOMProps, ...content: DOMChildren[]): HTMLTableCaptionElement {\n  return createElement('caption', props, ...content) as HTMLTableCaptionElement;\n}\n\n/**\n * Column group\n */\nexport function colgroup(props: DOMProps, ...children: DOMChildren[]): HTMLTableColElement {\n  return createElement('colgroup', props, ...children) as HTMLTableColElement;\n}\n\n/**\n * Column\n */\nexport function col(props: DOMProps): HTMLTableColElement {\n  return createElement('col', props) as HTMLTableColElement;\n}\n", "import { state, effect } from '../../../dist/runtime/index.js';\nimport {\n  vbox, hbox, container, center, scroll, grid,\n  text, button, input, checkbox, radio,\n  h1, h2, h3, strong, em, code,\n  header, footer, section, article,\n  table, thead, tbody, tr, th, td,\n  form, textarea, select, option,\n  when, show\n} from '../../../dist/runtime/index.js';\n\nexport default function App() {\n  // Vanilla JS Proxy-based state\n  const appState = state({\n    count: 0,\n    name: '',\n    checked: false,\n    selected: 'option1',\n    showSection: true\n  });\n\n  // Create reactive UI elements\n  const countDisplay = text(`Count: ${appState.count}`);\n  const nameDisplay = text(`Hello, ${appState.name || 'Guest'}!`);\n  const checkedDisplay = text(`Checked: ${appState.checked}`);\n  const selectedDisplay = text(`Selected: ${appState.selected}`);\n  const countInConditional = text(`Current count: ${appState.count}`);\n  \n  const toggleButton = button({ \n    onClick: () => appState.showSection = !appState.showSection \n  }, appState.showSection ? 'Hide Section' : 'Show Section');\n  \n  const conditionalContent = vbox({ class: 'conditional-content', style: { display: appState.showSection ? '' : 'none' } },\n    text('This content is conditionally rendered!'),\n    countInConditional\n  );\n  \n  // Auto-update UI when state changes\n  effect(() => {\n    countDisplay.textContent = `Count: ${appState.count}`;\n    nameDisplay.textContent = `Hello, ${appState.name || 'Guest'}!`;\n    checkedDisplay.textContent = `Checked: ${appState.checked}`;\n    selectedDisplay.textContent = `Selected: ${appState.selected}`;\n    countInConditional.textContent = `Current count: ${appState.count}`;\n    toggleButton.textContent = appState.showSection ? 'Hide Section' : 'Show Section';\n    conditionalContent.style.display = appState.showSection ? '' : 'none';\n  });\n  \n  return vbox({ class: 'app' },\n      header({ class: 'header' }, [\n        h1({}, 'ZenWeb - All Functions Test')\n      ]),\n      \n      scroll({ class: 'content' }, [\n        // State Management Test\n        section({ class: 'test-section' }, [\n          h2({}, 'State Management'),\n          vbox({ class: 'test-box' }, [\n            countDisplay,\n            hbox({ class: 'button-group' }, [\n              button({ onClick: () => appState.count-- }, 'Decrement'),\n              button({ onClick: () => appState.count++ }, 'Increment'),\n              button({ onClick: () => appState.count = 0 }, 'Reset')\n            ])\n          ])\n        ]),\n\n        // Layout Helpers Test\n        section({ class: 'test-section' }, [\n          h2({class: 'name', id: 'name'}, 'Layout Helpers'),\n          vbox({ class: 'test-box' }, [\n            h3({}, 'VBox (Vertical)'),\n            hbox({ class: 'demo-vbox' },\n              text('Item 1'),\n              text('Item 2'),\n              text('Item 3')\n            ),\n            \n            h3({}, 'HBox (Horizontal)'),\n            hbox({ class: 'demo-hbox' },\n              text('Item 1'),\n              text('Item 2'),\n              text('Item 3')\n            ),\n            \n            h3({}, 'Grid'),\n            grid({ columns: 3, gap: '1rem', class: 'demo-grid' },\n              text('Cell 1'),\n              text('Cell 2'),\n              text('Cell 3'),\n              text('Cell 4'),\n              text('Cell 5'),\n              text('Cell 6')\n            ),\n            \n            h3({}, 'Center'),\n            center({ class: 'demo-center' },\n              text('Centered Content')\n            )\n          ])\n        ]),\n\n        // Form Elements Test\n        section({ class: 'test-section' }, [\n          h2({}, 'Form Elements'),\n          form({ class: 'test-box', onSubmit: (e: Event) => { e.preventDefault(); } },\n            vbox({ class: 'form-group' },\n              text('Name:'),\n              input({\n                type: 'text',\n                value: appState.name,\n                onInput: (e: Event) => appState.name = (e.target as HTMLInputElement).value,\n                placeholder: 'Enter your name'\n              }),\n              nameDisplay\n            ),\n            \n            vbox({ class: 'form-group' },\n              text('Checkbox:'),\n              checkbox({\n                checked: appState.checked,\n                onChange: (e: Event) => appState.checked = (e.target as HTMLInputElement).checked\n              }),\n              checkedDisplay\n            ),\n            \n            vbox({ class: 'form-group' },\n              text('Select:'),\n              select({\n                value: appState.selected,\n                onChange: (e: Event) => appState.selected = (e.target as HTMLSelectElement).value\n              },\n                option({ value: 'option1' }, 'Option 1'),\n                option({ value: 'option2' }, 'Option 2'),\n                option({ value: 'option3' }, 'Option 3')\n              ),\n              selectedDisplay\n            ),\n            \n            vbox({ class: 'form-group' },\n              text('Textarea:'),\n              textarea({ placeholder: 'Enter text...', rows: 4 })\n            )\n          )\n        ]),\n\n        // Typography Test\n        section({ class: 'test-section' }, [\n          h2({}, 'Typography'),\n          vbox({ class: 'test-box' },\n            h1({}, 'Heading 1'),\n            h2({}, 'Heading 2'),\n            h3({}, 'Heading 3'),\n            text('Regular text'),\n            strong({}, 'Bold text'),\n            em({}, 'Italic text'),\n            code({}, 'Code text'),\n            text('Text with '),\n            strong({}, 'bold'),\n            text(' and '),\n            em({}, 'italic')\n          )\n        ]),\n\n        // Table Test\n        section({ class: 'test-section' }, [\n          h2({}, 'Table'),\n          table({ class: 'test-table' },\n            thead({},\n              tr({},\n                th({}, 'Name'),\n                th({}, 'Age'),\n                th({}, 'City')\n              )\n            ),\n            tbody({},\n              tr({},\n                td({}, 'John'),\n                td({}, '25'),\n                td({}, 'New York')\n              ),\n              tr({},\n                td({}, 'Jane'),\n                td({}, '30'),\n                td({}, 'London')\n              ),\n              tr({},\n                td({}, 'Bob'),\n                td({}, '35'),\n                td({}, 'Paris')\n              )\n            )\n          )\n        ]),\n\n        // Conditional Rendering Test\n        section({ class: 'test-section' }, [\n          h2({}, 'Conditional Rendering'),\n          vbox({ class: 'test-box' },\n            toggleButton,\n            conditionalContent\n          )\n        ])\n      ]),\n      \n      footer({ class: 'footer' },\n        text('ZenWeb Framework - Vanilla JS - All Functions Working!')\n      )\n    );\n}\n\n// Note: Styles should be in public/styles.css\n/*\n*/\n", "import { render } from '../../../dist/runtime/index.js';\nimport App from './App.js';\n\nconst root = document.getElementById('root');\nif (root) {\n  render(App, root);\n}\n"],
  "mappings": "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",
  "names": ["effect", "text", "container", "container"]
}
