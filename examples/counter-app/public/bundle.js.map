{
  "version": 3,
  "sources": ["../../../src/runtime/state.ts", "../../../src/runtime/vdom.ts", "../../../src/runtime/renderer.ts", "../../../src/runtime/helpers/layout.ts", "../../../src/runtime/helpers/basic_elements.ts", "../src/components/Header.ts", "../src/components/Footer.ts", "../src/App.ts", "../src/index.ts"],
  "sourcesContent": ["/**\n * ZenWeb State Management\n * Reactive state tracking with automatic dependency collection\n */\n\ntype EffectFunction = () => void;\ntype StateGetter<T> = () => T;\ntype StateSetter<T> = (value: T | ((prev: T) => T)) => void;\n\nlet currentComponent: any = null;\nlet currentEffect: EffectFunction | null = null;\nconst componentStates = new WeakMap<any, ReactiveState<any>[]>();\n\nclass ReactiveState<T> {\n  private _value: T;\n  private _subscribers: Set<EffectFunction>;\n\n  constructor(initialValue: T) {\n    this._value = initialValue;\n    this._subscribers = new Set();\n  }\n\n  get value(): T {\n    // Track dependency if we're inside a component or effect\n    if (currentEffect) {\n      this._subscribers.add(currentEffect);\n    }\n    return this._value;\n  }\n\n  set value(newValue: T) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n      this._notify();\n    }\n  }\n\n  private _notify(): void {\n    // Batch updates for performance\n    const subscribers = Array.from(this._subscribers);\n    queueMicrotask(() => {\n      subscribers.forEach(callback => {\n        try {\n          callback();\n        } catch (error) {\n          console.error('Error in state subscriber:', error);\n        }\n      });\n    });\n  }\n\n  cleanup(): void {\n    this._subscribers.clear();\n  }\n}\n\n/**\n * Create a reactive state value\n * @param initialValue - Initial state value\n * @returns Tuple of getter and setter\n */\nexport function state<T>(initialValue: T): [StateGetter<T>, StateSetter<T>] {\n  const reactiveState = new ReactiveState<T>(initialValue);\n\n  const getter: StateGetter<T> = () => reactiveState.value;\n  const setter: StateSetter<T> = (newValue) => {\n    reactiveState.value = typeof newValue === 'function' \n      ? (newValue as (prev: T) => T)(reactiveState.value) \n      : newValue;\n  };\n\n  // Store reference for cleanup\n  if (currentComponent) {\n    if (!componentStates.has(currentComponent)) {\n      componentStates.set(currentComponent, []);\n    }\n    componentStates.get(currentComponent)!.push(reactiveState);\n  }\n\n  return [getter, setter];\n}\n\n/**\n * Create a computed value that automatically updates when dependencies change\n * @param computeFn - Function that computes the value\n * @returns Getter function for computed value\n */\nexport function computed<T>(computeFn: () => T): StateGetter<T> {\n  const [value, setValue] = state<T>(null as T);\n  \n  const effectFn: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = effectFn;\n    try {\n      const newValue = computeFn();\n      setValue(newValue);\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  effectFn(); // Run once to establish dependencies\n  return value;\n}\n\n/**\n * Run an effect when dependencies change\n * @param effectFn - Effect function to run\n */\nexport function effect(effectFn: EffectFunction): void {\n  const wrappedEffect: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = wrappedEffect;\n    try {\n      effectFn();\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  wrappedEffect();\n}\n\n/**\n * Set the current component context for state tracking\n * @param component - Component instance\n */\nexport function setCurrentComponent(component: any): void {\n  currentComponent = component;\n}\n\n/**\n * Cleanup all states associated with a component\n * @param component - Component instance\n */\nexport function cleanupComponent(component: any): void {\n  const states = componentStates.get(component);\n  if (states) {\n    states.forEach(state => state.cleanup());\n    componentStates.delete(component);\n  }\n}\n", "/**\n * ZenWeb Virtual DOM Implementation\n * Efficient diffing and patching algorithm\n */\n\nimport type { VNode, VNodeChild, VNodeProps } from './types.js';\n\n/**\n * Create a virtual node\n */\nexport function h(\n  type: string | Function,\n  props: VNodeProps | null,\n  ...children: VNodeChild[]\n): VNode {\n  return {\n    type,\n    props: props || {},\n    children: normalizeChildren(children),\n    key: props?.key\n  };\n}\n\n/**\n * Normalize children to handle various input types\n */\nfunction normalizeChildren(children: VNodeChild[]): VNodeChild[] {\n  return children.flat(Infinity).filter(child => {\n    return child !== null && child !== undefined && child !== false && child !== true;\n  });\n}\n\n/**\n * Create a text virtual node\n */\nexport function createTextVNode(text: string | number): VNode {\n  return {\n    type: 'text',\n    props: {},\n    children: [],\n    el: undefined\n  } as any;\n}\n\n/**\n * Mount a virtual node to the DOM\n */\nexport function mount(vnode: VNode, container: HTMLElement): void {\n  const el = createElement(vnode);\n  vnode.el = el as HTMLElement;\n  container.appendChild(el);\n}\n\n/**\n * Create a DOM element from a virtual node\n */\nfunction createElement(vnode: VNode): HTMLElement | Text {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return document.createTextNode(String(vnode));\n  }\n\n  if (typeof vnode.type === 'function') {\n    // Component\n    const componentVNode = (vnode.type as Function)(vnode.props);\n    return createElement(componentVNode);\n  }\n\n  // Regular element\n  const el = document.createElement(vnode.type as string);\n\n  // Set properties\n  if (vnode.props) {\n    for (const [key, value] of Object.entries(vnode.props)) {\n      setAttribute(el, key, value);\n    }\n  }\n\n  // Mount children\n  if (vnode.children) {\n    vnode.children.forEach(child => {\n      if (child) {\n        const childEl = createElement(child as VNode);\n        el.appendChild(childEl);\n      }\n    });\n  }\n\n  return el;\n}\n\n/**\n * Set an attribute on a DOM element\n */\nfunction setAttribute(el: HTMLElement, key: string, value: any): void {\n  if (key.startsWith('on') && typeof value === 'function') {\n    // Event listener\n    const eventName = key.slice(2).toLowerCase();\n    el.addEventListener(eventName, value);\n  } else if (key === 'class' || key === 'className') {\n    el.className = value;\n  } else if (key === 'style') {\n    if (typeof value === 'string') {\n      el.setAttribute('style', value);\n    } else if (typeof value === 'object') {\n      Object.assign(el.style, value);\n    }\n  } else if (key === 'value') {\n    (el as any).value = value;\n  } else if (key === 'checked') {\n    (el as any).checked = value;\n  } else if (key !== 'key') {\n    el.setAttribute(key, value);\n  }\n}\n\n/**\n * Remove an attribute from a DOM element\n */\nfunction removeAttribute(el: HTMLElement, key: string, oldValue: any): void {\n  if (key.startsWith('on') && typeof oldValue === 'function') {\n    const eventName = key.slice(2).toLowerCase();\n    el.removeEventListener(eventName, oldValue);\n  } else if (key === 'class' || key === 'className') {\n    el.className = '';\n  } else if (key === 'style') {\n    el.removeAttribute('style');\n  } else if (key !== 'key') {\n    el.removeAttribute(key);\n  }\n}\n\n/**\n * Patch (update) a DOM element with new virtual node\n */\nexport function patch(oldVNode: VNode, newVNode: VNode): void {\n  if (!oldVNode.el) return;\n\n  // Different types, replace entirely\n  if (oldVNode.type !== newVNode.type) {\n    const parent = oldVNode.el.parentElement;\n    if (parent) {\n      const newEl = createElement(newVNode);\n      newVNode.el = newEl as HTMLElement;\n      parent.replaceChild(newEl, oldVNode.el);\n    }\n    return;\n  }\n\n  // Same type, update props and children\n  newVNode.el = oldVNode.el;\n\n  // Update props\n  const oldProps = oldVNode.props || {};\n  const newProps = newVNode.props || {};\n\n  // Remove old props\n  for (const key in oldProps) {\n    if (!(key in newProps)) {\n      removeAttribute(oldVNode.el as HTMLElement, key, oldProps[key]);\n    }\n  }\n\n  // Add/update new props\n  for (const key in newProps) {\n    if (oldProps[key] !== newProps[key]) {\n      setAttribute(oldVNode.el as HTMLElement, key, newProps[key]);\n    }\n  }\n\n  // Update children\n  patchChildren(oldVNode, newVNode);\n}\n\n/**\n * Patch children of a virtual node\n */\nfunction patchChildren(oldVNode: VNode, newVNode: VNode): void {\n  const oldChildren = oldVNode.children || [];\n  const newChildren = newVNode.children || [];\n  const el = oldVNode.el as HTMLElement;\n\n  const commonLength = Math.min(oldChildren.length, newChildren.length);\n\n  // Patch common children\n  for (let i = 0; i < commonLength; i++) {\n    const oldChild = oldChildren[i];\n    const newChild = newChildren[i];\n\n    if (typeof oldChild === 'string' || typeof oldChild === 'number') {\n      if (typeof newChild === 'string' || typeof newChild === 'number') {\n        if (oldChild !== newChild) {\n          el.childNodes[i].textContent = String(newChild);\n        }\n      } else {\n        const newEl = createElement(newChild as VNode);\n        el.replaceChild(newEl, el.childNodes[i]);\n      }\n    } else if (typeof newChild === 'string' || typeof newChild === 'number') {\n      const textNode = document.createTextNode(String(newChild));\n      el.replaceChild(textNode, el.childNodes[i]);\n    } else {\n      patch(oldChild as VNode, newChild as VNode);\n    }\n  }\n\n  // Add new children\n  if (newChildren.length > oldChildren.length) {\n    for (let i = commonLength; i < newChildren.length; i++) {\n      const child = newChildren[i];\n      if (child) {\n        const childEl = createElement(child as VNode);\n        el.appendChild(childEl);\n      }\n    }\n  }\n\n  // Remove old children\n  if (oldChildren.length > newChildren.length) {\n    for (let i = oldChildren.length - 1; i >= commonLength; i--) {\n      el.removeChild(el.childNodes[i]);\n    }\n  }\n}\n\n/**\n * Unmount a virtual node from the DOM\n */\nexport function unmount(vnode: VNode): void {\n  if (vnode.el && vnode.el.parentElement) {\n    vnode.el.parentElement.removeChild(vnode.el);\n  }\n}\n", "/**\n * ZenWeb Renderer\n * Main rendering engine that connects components to the DOM\n */\n\nimport { mount, patch, unmount } from './vdom.js';\nimport { setCurrentComponent, cleanupComponent } from './state.js';\nimport type { VNode, ComponentInstance } from './types.js';\n\nconst componentInstances = new WeakMap<any, ComponentInstance>();\n\n/**\n * Render a component to a container element\n */\nexport function render(component: Function, container: HTMLElement): ComponentInstance {\n  const instance: ComponentInstance = {\n    vnode: null,\n    el: null,\n    update: () => {},\n    unmount: () => {}\n  };\n\n  const update = () => {\n    setCurrentComponent(instance);\n    \n    try {\n      const newVNode = component({}) as VNode;\n\n      if (!instance.vnode) {\n        // Initial mount\n        mount(newVNode, container);\n        instance.vnode = newVNode;\n        instance.el = newVNode.el as HTMLElement;\n      } else {\n        // Update\n        patch(instance.vnode, newVNode);\n        instance.vnode = newVNode;\n      }\n    } catch (error) {\n      console.error('Error rendering component:', error);\n    } finally {\n      setCurrentComponent(null);\n    }\n  };\n\n  const unmountFn = () => {\n    if (instance.vnode) {\n      unmount(instance.vnode);\n      cleanupComponent(instance);\n      instance.vnode = null;\n      instance.el = null;\n    }\n  };\n\n  instance.update = update;\n  instance.unmount = unmountFn;\n\n  // Initial render\n  update();\n\n  componentInstances.set(component, instance);\n  return instance;\n}\n\n/**\n * Create a component instance\n */\nexport function createComponent(component: Function, props: any = {}): VNode {\n  setCurrentComponent(component);\n  \n  try {\n    return component(props) as VNode;\n  } finally {\n    setCurrentComponent(null);\n  }\n}\n", "/**\n * ZenWeb Layout Helpers\n * Layout and positioning components\n */\n\nimport { h } from '../vdom.js';\nimport type { VNode, VNodeProps, VNodeChild } from '../types.js';\n\n/**\n * Vertical box layout (flex column)\n */\nexport function vbox(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Horizontal box layout (flex row)\n */\nexport function hbox(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Grid layout container\n */\nexport function grid(\n  props: VNodeProps & { columns?: number; gap?: string },\n  children: VNodeChild[]\n): VNode {\n  const { columns = 1, gap = '1rem', ...restProps } = props;\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gap,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return h('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Plain container (div without flex)\n */\nexport function container(props: VNodeProps, children: VNodeChild[]): VNode {\n  return h('div', props, ...children);\n}\n\n/**\n * Stack layout with z-index management\n */\nexport function stack(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Center content (both axes)\n */\nexport function center(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Flexible spacer\n */\nexport function spacer(props: VNodeProps = {}): VNode {\n  const style = {\n    flex: '1',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style });\n}\n\n/**\n * Flex wrap container\n */\nexport function wrap(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Scrollable container\n */\nexport function scroll(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    overflow: 'auto',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Sticky positioned container\n */\nexport function sticky(props: VNodeProps & { top?: string }, children: VNodeChild[]): VNode {\n  const { top = '0', ...restProps } = props;\n  const style = {\n    position: 'sticky',\n    top,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return h('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Fixed positioned container\n */\nexport function fixed(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    position: 'fixed',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Absolute positioned container\n */\nexport function absolute(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    position: 'absolute',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n\n/**\n * Relative positioned container\n */\nexport function relative(props: VNodeProps, children: VNodeChild[]): VNode {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return h('div', { ...props, style }, ...children);\n}\n", "/**\n * ZenWeb Basic Elements\n * Basic HTML elements and components\n */\n\nimport { h } from '../vdom.js';\nimport type { VNode, VNodeProps, VNodeChild } from '../types.js';\n\n/**\n * Div element (generic container)\n */\nexport function div(props: VNodeProps, children: VNodeChild[]): VNode {\n  return h('div', props, ...children);\n}\n\n/**\n * Span element (inline container)\n */\nexport function span(props: VNodeProps, children: VNodeChild[]): VNode {\n  return h('span', props, ...children);\n}\n\n/**\n * Text element\n */\nexport function text(props: VNodeProps | string, content?: string): VNode {\n  if (typeof props === 'string') {\n    return h('span', {}, props);\n  }\n  return h('span', props, content || '');\n}\n\n/**\n * Button element\n */\nexport function button(props: VNodeProps, content: VNodeChild): VNode {\n  return h('button', props, content);\n}\n\n/**\n * Input element\n */\nexport function input(props: VNodeProps): VNode {\n  return h('input', props);\n}\n\n/**\n * Image element\n */\nexport function image(props: VNodeProps & { src: string; alt?: string; lazy?: boolean }): VNode {\n  const imgProps = { ...props };\n  if (props.lazy) {\n    imgProps.loading = 'lazy';\n    delete imgProps.lazy;\n  }\n  return h('img', imgProps);\n}\n\n/**\n * Link/anchor element\n */\nexport function link(props: VNodeProps & { href: string }, children: VNodeChild[]): VNode {\n  return h('a', props, ...children);\n}\n\n/**\n * Label element\n */\nexport function label(props: VNodeProps & { htmlFor?: string }, content: VNodeChild): VNode {\n  return h('label', props, content);\n}\n\n/**\n * Paragraph element\n */\nexport function p(props: VNodeProps, content: VNodeChild): VNode {\n  return h('p', props, content);\n}\n\n/**\n * List element with optimized rendering\n */\nexport function list<T>(\n  props: VNodeProps & {\n    items: T[];\n    renderItem: (item: T, index: number) => VNode;\n    keyExtractor?: (item: T, index: number) => string | number;\n  }\n): VNode {\n  const { items, renderItem, keyExtractor, ...restProps } = props;\n  const children = items.map((item, index) => {\n    const child = renderItem(item, index);\n    if (keyExtractor) {\n      child.key = keyExtractor(item, index);\n    }\n    return child;\n  });\n  return h('div', restProps, ...children);\n}\n\n/**\n * Unordered list\n */\nexport function ul(props: VNodeProps, children: VNodeChild[]): VNode {\n  return h('ul', props, ...children);\n}\n\n/**\n * Ordered list\n */\nexport function ol(props: VNodeProps, children: VNodeChild[]): VNode {\n  return h('ol', props, ...children);\n}\n\n/**\n * List item\n */\nexport function li(props: VNodeProps, content: VNodeChild): VNode {\n  return h('li', props, content);\n}\n\n/**\n * Horizontal rule\n */\nexport function hr(props: VNodeProps = {}): VNode {\n  return h('hr', props);\n}\n\n/**\n * Line break\n */\nexport function br(props: VNodeProps = {}): VNode {\n  return h('br', props);\n}\n", "import { hbox, text } from '../../../../dist/runtime/index.js';\n\ninterface HeaderProps {\n  title: string;\n}\n\nexport default function Header(props: HeaderProps) {return (hbox({ class: 'header' }, [\n      text({ class: 'title' }, props.title)\n    ]));\n}\n", "import { hbox, text } from '../../../../dist/runtime/index.js';\n\nexport default function Footer() {return (hbox({ class: 'footer' }, [\n      text({}, 'Built with ZenWeb \uD83E\uDDD8')\n    ]));\n}\n", "import { state } from '../../../dist/runtime/index.js';\nimport { vbox, hbox, text, button, input } from '../../../dist/runtime/index.js';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\n\nexport default function App() {\n  const [count, setCount] = state(0);\n  const [name, setName] = state('');return (vbox({ class: 'app-container' }, [\n      Header({ title: 'Welcome to ZenWeb 2' }),\n      \n      vbox({ class: 'main-content' }, [\n        text({ class: 'greeting' }, `Hello, ${name() || 'Guest'}!`),\n        \n        input({\n          placeholder: 'Enter your name',\n          value: name(),\n          onInput: (e: Event) => setName((e.target as HTMLInputElement).value)\n        }),\n        \n        hbox({ class: 'counter-section' }, [\n          button({ onClick: () => setCount(count() - 1) }, 'Decrement'),\n          text({ class: 'count-display' }, `Count: ${count()}`),\n          button({ onClick: () => setCount(count() + 1) }, 'Increment')\n        ]),\n        \n        button({\n          class: 'reset-btn',\n          onClick: () => {\n            setCount(0);\n            setName('');\n          }\n        }, 'Reset All')\n      ]),\n      \n      Footer()\n    ]));\n}\n", "import { render } from '../../../dist/runtime/index.js';\nimport App from './App.js';\n\nconst root = document.getElementById('root');\nif (root) {\n  render(App, root);\n}\n"],
  "mappings": "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",
  "names": ["state", "container", "container"]
}
