{
  "version": 3,
  "sources": ["../../../src/runtime/debug.ts", "../../../src/runtime/dom.ts", "../../../src/runtime/renderer.ts", "../../../src/runtime/helpers/layout.ts", "../../../src/runtime/helpers/basic_elements.ts", "../../../src/runtime/helpers/typography.ts", "../../../src/runtime/helpers/semantic.ts", "../src/App.ts", "../src/index.ts"],
  "sourcesContent": ["/**\n * ZenWeb Runtime Debugging\n * Debug utilities for development\n */\n\nlet debugEnabled = false;\n\nexport function enableDebug(): void {\n  debugEnabled = true;\n  console.log('[ZenWeb Debug] Debugging enabled');\n}\n\nexport function disableDebug(): void {\n  debugEnabled = false;\n}\n\nexport function isDebugEnabled(): boolean {\n  return debugEnabled;\n}\n\nexport function debugLog(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.log(`[${timestamp}] [DEBUG:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugWarn(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.warn(`[${timestamp}] [WARN:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugError(category: string, message: string, error?: Error): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.error(`[${timestamp}] [ERROR:${category}] ${message}`, error || '');\n  }\n}\n\n// Enable debug mode if URL has ?debug=true or localStorage has debug flag\nif (typeof window !== 'undefined') {\n  const urlParams = new URLSearchParams(window.location.search);\n  const hasDebugParam = urlParams.get('debug') === 'true';\n  const hasDebugStorage = localStorage.getItem('zenweb-debug') === 'true';\n  \n  if (hasDebugParam || hasDebugStorage) {\n    enableDebug();\n  }\n}\n", "/**\n * ZenWeb DOM Manipulation\n * Direct DOM element creation and manipulation (vanilla JavaScript)\n * No Virtual DOM - just real DOM elements\n */\n\nimport { debugLog } from './debug.js';\n\nexport type DOMChild = HTMLElement | Text | string | number | boolean | null | undefined;\nexport type DOMChildren = DOMChild | DOMChild[];\n\nexport interface DOMProps {\n  [key: string]: any;\n  class?: string;\n  className?: string;\n  id?: string;\n  style?: string | Partial<CSSStyleDeclaration>;\n  onClick?: (event: MouseEvent) => void;\n  onInput?: (event: Event) => void;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  onKeyUp?: (event: KeyboardEvent) => void;\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  ref?: { current: HTMLElement | null };\n}\n\n/**\n * Create a real DOM element (vanilla JavaScript)\n * This is the core function that replaces the h() virtual DOM function\n */\nexport function createElement(\n  tag: string,\n  props: DOMProps | null = null,\n  ...children: DOMChildren[]\n): HTMLElement {\n  const element = document.createElement(tag);\n  \n  // Apply props\n  if (props) {\n    applyProps(element, props);\n  }\n  \n  // Append children\n  appendChildren(element, children);\n  \n  debugLog('DOM', `Created element: ${tag}`);\n  return element;\n}\n\n/**\n * Create a text node\n */\nexport function createTextNode(text: string | number): Text {\n  return document.createTextNode(String(text));\n}\n\n/**\n * Apply properties to a DOM element\n */\nexport function applyProps(element: HTMLElement, props: DOMProps): void {\n  for (const [key, value] of Object.entries(props)) {\n    if (value === null || value === undefined) {\n      continue;\n    }\n    \n    // Handle event listeners\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventName = key.slice(2).toLowerCase();\n      element.addEventListener(eventName, value as EventListener);\n      debugLog('DOM', `Added event listener: ${eventName}`);\n    }\n    // Handle class/className\n    else if (key === 'class' || key === 'className') {\n      element.className = value;\n    }\n    // Handle style\n    else if (key === 'style') {\n      if (typeof value === 'string') {\n        element.setAttribute('style', value);\n      } else if (typeof value === 'object') {\n        Object.assign(element.style, value);\n      }\n    }\n    // Handle ref\n    else if (key === 'ref' && typeof value === 'object' && 'current' in value) {\n      value.current = element;\n    }\n    // Handle special properties\n    else if (key === 'value') {\n      (element as any).value = value;\n    }\n    else if (key === 'checked') {\n      (element as any).checked = value;\n    }\n    // Handle data attributes\n    else if (key.startsWith('data-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle aria attributes\n    else if (key.startsWith('aria-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle other attributes\n    else {\n      element.setAttribute(key, String(value));\n    }\n  }\n}\n\n/**\n * Update properties on a DOM element\n */\nexport function updateProps(element: HTMLElement, oldProps: DOMProps, newProps: DOMProps): void {\n  // Remove old props\n  for (const key in oldProps) {\n    if (!(key in newProps)) {\n      removeProp(element, key, oldProps[key]);\n    }\n  }\n  \n  // Add/update new props\n  for (const key in newProps) {\n    if (oldProps[key] !== newProps[key]) {\n      // Remove old event listener if it's an event\n      if (key.startsWith('on') && typeof oldProps[key] === 'function') {\n        const eventName = key.slice(2).toLowerCase();\n        element.removeEventListener(eventName, oldProps[key] as EventListener);\n      }\n      \n      // Apply new prop\n      applyProps(element, { [key]: newProps[key] });\n    }\n  }\n}\n\n/**\n * Remove a property from a DOM element\n */\nexport function removeProp(element: HTMLElement, key: string, value: any): void {\n  if (key.startsWith('on') && typeof value === 'function') {\n    const eventName = key.slice(2).toLowerCase();\n    element.removeEventListener(eventName, value as EventListener);\n  } else if (key === 'class' || key === 'className') {\n    element.className = '';\n  } else if (key === 'style') {\n    element.removeAttribute('style');\n  } else if (key !== 'ref') {\n    element.removeAttribute(key);\n  }\n}\n\n/**\n * Append children to a DOM element\n */\nexport function appendChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  const flatChildren = children.flat(Infinity) as DOMChild[];\n  \n  for (const child of flatChildren) {\n    if (child === null || child === undefined || child === false || child === true) {\n      continue;\n    }\n    \n    if (typeof child === 'string' || typeof child === 'number') {\n      parent.appendChild(createTextNode(child));\n    } else if (child instanceof HTMLElement || child instanceof Text) {\n      parent.appendChild(child);\n    }\n  }\n}\n\n/**\n * Replace all children of an element\n */\nexport function replaceChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  // Clear existing children\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n  \n  // Append new children\n  appendChildren(parent, children);\n}\n\n/**\n * Mount an element to a container\n */\nexport function mount(element: HTMLElement, container: HTMLElement): void {\n  container.appendChild(element);\n  debugLog('DOM', 'Mounted element to container');\n}\n\n/**\n * Unmount an element from its parent\n */\nexport function unmount(element: HTMLElement): void {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n    debugLog('DOM', 'Unmounted element');\n  }\n}\n\n/**\n * Create a ref object for accessing DOM elements\n */\nexport function createRef<T extends HTMLElement = HTMLElement>(): { current: T | null } {\n  return { current: null };\n}\n\n/**\n * Query selector helper\n */\nexport function $(selector: string, parent: HTMLElement | Document = document): HTMLElement | null {\n  return parent.querySelector(selector);\n}\n\n/**\n * Query selector all helper\n */\nexport function $$(selector: string, parent: HTMLElement | Document = document): HTMLElement[] {\n  return Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * Add class to element\n */\nexport function addClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.add(...classNames);\n}\n\n/**\n * Remove class from element\n */\nexport function removeClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.remove(...classNames);\n}\n\n/**\n * Toggle class on element\n */\nexport function toggleClass(element: HTMLElement, className: string, force?: boolean): void {\n  element.classList.toggle(className, force);\n}\n\n/**\n * Set styles on element\n */\nexport function setStyle(element: HTMLElement, styles: Partial<CSSStyleDeclaration>): void {\n  Object.assign(element.style, styles);\n}\n\n/**\n * Set attributes on element\n */\nexport function setAttributes(element: HTMLElement, attrs: Record<string, string>): void {\n  for (const [key, value] of Object.entries(attrs)) {\n    element.setAttribute(key, value);\n  }\n}\n\n/**\n * Add event listener helper\n */\nexport function on<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n  options?: AddEventListenerOptions\n): () => void {\n  element.addEventListener(event, handler as EventListener, options);\n  return () => element.removeEventListener(event, handler as EventListener, options);\n}\n\n/**\n * Remove event listener helper\n */\nexport function off<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void\n): void {\n  element.removeEventListener(event, handler as EventListener);\n}\n", "/**\n * ZenWeb Renderer\n * Main rendering engine using vanilla JavaScript (no VDOM)\n */\n\nimport { mount, unmount, replaceChildren } from './dom.js';\nimport { subscribe } from './state.js';\nimport { debugLog } from './debug.js';\n\nexport interface ComponentInstance {\n  element: HTMLElement | null;\n  container: HTMLElement | null;\n  update: () => void;\n  unmount: () => void;\n  unsubscribe?: () => void;\n}\n\nconst componentInstances = new WeakMap<Function, ComponentInstance>();\nlet renderCounter = 0;\n\n/**\n * Render a component to a container element\n * Component should return an HTMLElement\n */\nexport function render(component: Function, container: HTMLElement, props: any = {}): ComponentInstance {\n  const instance: ComponentInstance = {\n    element: null,\n    container,\n    update: () => {},\n    unmount: () => {}\n  };\n\n  const update = () => {\n    const renderId = ++renderCounter;\n    debugLog('Renderer', `Render #${renderId} starting`);\n    \n    try {\n      // Execute component function to get DOM element\n      const newElement = component(props) as HTMLElement;\n      debugLog('Renderer', `Render #${renderId} component executed`);\n\n      if (!instance.element) {\n        // Initial mount\n        debugLog('Renderer', `Render #${renderId} initial mount`);\n        mount(newElement, container);\n        instance.element = newElement;\n      } else {\n        // Update - replace old element with new one\n        debugLog('Renderer', `Render #${renderId} updating DOM`);\n        if (instance.element.parentElement) {\n          instance.element.parentElement.replaceChild(newElement, instance.element);\n        }\n        instance.element = newElement;\n      }\n      debugLog('Renderer', `Render #${renderId} complete`);\n    } catch (error) {\n      console.error('Error rendering component:', error);\n    }\n  };\n\n  const unmountFn = () => {\n    if (instance.element) {\n      unmount(instance.element);\n      instance.element = null;\n    }\n    if (instance.unsubscribe) {\n      instance.unsubscribe();\n    }\n  };\n\n  instance.update = update;\n  instance.unmount = unmountFn;\n\n  // Initial render\n  update();\n\n  componentInstances.set(component, instance);\n  return instance;\n}\n\n/**\n * Create a component that auto-updates when state changes\n */\nexport function createComponent(component: Function, stateObj?: any, props: any = {}): HTMLElement {\n  const element = component(props) as HTMLElement;\n  \n  // If state object provided, subscribe to changes and re-render\n  if (stateObj && stateObj.__listeners) {\n    const container = document.createElement('div');\n    container.appendChild(element);\n    \n    subscribe(stateObj, () => {\n      const newElement = component(props) as HTMLElement;\n      replaceChildren(container, [newElement]);\n    });\n    \n    return container;\n  }\n  \n  return element;\n}\n\n/**\n * Mount a component and return cleanup function\n */\nexport function mountComponent(component: Function, container: HTMLElement, props: any = {}): () => void {\n  const instance = render(component, container, props);\n  return () => instance.unmount();\n}\n", "/**\n * ZenWeb Layout Helpers\n * Layout and positioning components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Vertical box layout (flex column)\n */\nexport function vbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Horizontal box layout (flex row)\n */\nexport function hbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Grid layout container\n */\nexport function grid(\n  props: DOMProps & { columns?: number; gap?: string },\n  ...children: DOMChildren[]\n): HTMLElement {\n  const { columns = 1, gap = '1rem', ...restProps } = props;\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gap,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Plain container (div without flex)\n */\nexport function container(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Stack layout with z-index management\n */\nexport function stack(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Center content (both axes)\n */\nexport function center(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Flexible spacer\n */\nexport function spacer(props: DOMProps = {}): HTMLElement {\n  const style = {\n    flex: '1',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style });\n}\n\n/**\n * Flex wrap container\n */\nexport function wrap(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Scrollable container\n */\nexport function scroll(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    overflow: 'auto',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Sticky positioned container\n */\nexport function sticky(props: DOMProps & { top?: string }, ...children: DOMChildren[]): HTMLElement {\n  const { top = '0', ...restProps } = props;\n  const style = {\n    position: 'sticky',\n    top,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Fixed positioned container\n */\nexport function fixed(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'fixed',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Absolute positioned container\n */\nexport function absolute(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'absolute',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Relative positioned container\n */\nexport function relative(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n", "/**\n * ZenWeb Basic Elements\n * Basic HTML elements and components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Div element (generic container)\n */\nexport function div(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Span element (inline container)\n */\nexport function span(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('span', props, ...children);\n}\n\n/**\n * Text element\n */\nexport function text(props: DOMProps | string, content?: string): HTMLElement {\n  if (typeof props === 'string') {\n    return createElement('span', {}, props);\n  }\n  return createElement('span', props, content || '');\n}\n\n/**\n * Button element\n */\nexport function button(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('button', props, ...content);\n}\n\n/**\n * Input element\n */\nexport function input(props: DOMProps): HTMLInputElement {\n  return createElement('input', props) as HTMLInputElement;\n}\n\n/**\n * Image element\n */\nexport function image(props: DOMProps & { src: string; alt?: string; lazy?: boolean }): HTMLImageElement {\n  const imgProps = { ...props };\n  if (props.lazy) {\n    imgProps.loading = 'lazy';\n    delete imgProps.lazy;\n  }\n  return createElement('img', imgProps) as HTMLImageElement;\n}\n\n/**\n * Link/anchor element\n */\nexport function link(props: DOMProps & { href: string }, ...children: DOMChildren[]): HTMLAnchorElement {\n  return createElement('a', props, ...children) as HTMLAnchorElement;\n}\n\n/**\n * Label element\n */\nexport function label(props: DOMProps & { htmlFor?: string }, ...content: DOMChildren[]): HTMLLabelElement {\n  return createElement('label', props, ...content) as HTMLLabelElement;\n}\n\n/**\n * Paragraph element\n */\nexport function p(props: DOMProps, ...content: DOMChildren[]): HTMLParagraphElement {\n  return createElement('p', props, ...content) as HTMLParagraphElement;\n}\n\n/**\n * List element with optimized rendering\n */\nexport function list<T>(\n  props: DOMProps & {\n    items: T[];\n    renderItem: (item: T, index: number) => HTMLElement;\n    keyExtractor?: (item: T, index: number) => string | number;\n  }\n): HTMLElement {\n  const { items, renderItem, keyExtractor, ...restProps } = props;\n  const children = items.map((item, index) => {\n    const child = renderItem(item, index);\n    if (keyExtractor) {\n      child.dataset.key = String(keyExtractor(item, index));\n    }\n    return child;\n  });\n  return createElement('div', restProps, ...children);\n}\n\n/**\n * Unordered list\n */\nexport function ul(props: DOMProps, ...children: DOMChildren[]): HTMLUListElement {\n  return createElement('ul', props, ...children) as HTMLUListElement;\n}\n\n/**\n * Ordered list\n */\nexport function ol(props: DOMProps, ...children: DOMChildren[]): HTMLOListElement {\n  return createElement('ol', props, ...children) as HTMLOListElement;\n}\n\n/**\n * List item\n */\nexport function li(props: DOMProps, ...content: DOMChildren[]): HTMLLIElement {\n  return createElement('li', props, ...content) as HTMLLIElement;\n}\n\n/**\n * Horizontal rule\n */\nexport function hr(props: DOMProps = {}): HTMLHRElement {\n  return createElement('hr', props) as HTMLHRElement;\n}\n\n/**\n * Line break\n */\nexport function br(props: DOMProps = {}): HTMLBRElement {\n  return createElement('br', props) as HTMLBRElement;\n}\n\n/**\n * Description list\n */\nexport function dl(props: DOMProps, ...children: DOMChildren[]): HTMLDListElement {\n  return createElement('dl', props, ...children) as HTMLDListElement;\n}\n\n/**\n * Description term\n */\nexport function dt(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dt', props, ...content);\n}\n\n/**\n * Description definition\n */\nexport function dd(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dd', props, ...content);\n}\n", "/**\n * ZenWeb Typography Helpers\n * Text and typography elements\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Heading elements\n */\nexport function h1(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h1', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h2(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h2', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h3(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h3', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h4(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h4', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h5(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h5', props, ...content) as HTMLHeadingElement;\n}\n\nexport function h6(props: DOMProps, ...content: DOMChildren[]): HTMLHeadingElement {\n  return createElement('h6', props, ...content) as HTMLHeadingElement;\n}\n\n/**\n * Bold text\n */\nexport function strong(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('strong', props, ...content);\n}\n\n/**\n * Italic text\n */\nexport function em(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('em', props, ...content);\n}\n\n/**\n * Inline code\n */\nexport function code(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('code', props, ...content);\n}\n\n/**\n * Preformatted text\n */\nexport function pre(props: DOMProps, ...content: DOMChildren[]): HTMLPreElement {\n  return createElement('pre', props, ...content) as HTMLPreElement;\n}\n\n/**\n * Blockquote\n */\nexport function blockquote(props: DOMProps, ...children: DOMChildren[]): HTMLQuoteElement {\n  return createElement('blockquote', props, ...children) as HTMLQuoteElement;\n}\n\n/**\n * Highlighted text\n */\nexport function mark(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('mark', props, ...content);\n}\n\n/**\n * Small text\n */\nexport function small(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('small', props, ...content);\n}\n\n/**\n * Deleted text\n */\nexport function del(props: DOMProps, ...content: DOMChildren[]): HTMLModElement {\n  return createElement('del', props, ...content) as HTMLModElement;\n}\n\n/**\n * Inserted text\n */\nexport function ins(props: DOMProps, ...content: DOMChildren[]): HTMLModElement {\n  return createElement('ins', props, ...content) as HTMLModElement;\n}\n\n/**\n * Subscript\n */\nexport function sub(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('sub', props, ...content);\n}\n\n/**\n * Superscript\n */\nexport function sup(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('sup', props, ...content);\n}\n\n/**\n * Abbreviation\n */\nexport function abbr(props: DOMProps & { title: string }, ...content: DOMChildren[]): HTMLElement {\n  return createElement('abbr', props, ...content);\n}\n\n/**\n * Citation\n */\nexport function cite(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('cite', props, ...content);\n}\n\n/**\n * Keyboard input\n */\nexport function kbd(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('kbd', props, ...content);\n}\n\n/**\n * Sample output\n */\nexport function samp(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('samp', props, ...content);\n}\n\n/**\n * Variable\n */\nexport function varElement(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('var', props, ...content);\n}\n", "/**\n * ZenWeb Semantic Elements\n * Semantic HTML5 elements\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Header section\n */\nexport function header(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('header', props, ...children);\n}\n\n/**\n * Footer section\n */\nexport function footer(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('footer', props, ...children);\n}\n\n/**\n * Navigation\n */\nexport function nav(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('nav', props, ...children);\n}\n\n/**\n * Main content\n */\nexport function main(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('main', props, ...children);\n}\n\n/**\n * Section\n */\nexport function section(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('section', props, ...children);\n}\n\n/**\n * Article\n */\nexport function article(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('article', props, ...children);\n}\n\n/**\n * Aside/Sidebar\n */\nexport function aside(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('aside', props, ...children);\n}\n\n/**\n * Figure with caption\n */\nexport function figure(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('figure', props, ...children);\n}\n\n/**\n * Figure caption\n */\nexport function figcaption(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('figcaption', props, ...content);\n}\n\n/**\n * Time element\n */\nexport function time(props: DOMProps & { datetime?: string }, ...content: DOMChildren[]): HTMLTimeElement {\n  return createElement('time', props, ...content) as HTMLTimeElement;\n}\n\n/**\n * Address element\n */\nexport function address(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('address', props, ...children);\n}\n\n/**\n * Details disclosure\n */\nexport function details(props: DOMProps & { open?: boolean }, ...children: DOMChildren[]): HTMLDetailsElement {\n  return createElement('details', props, ...children) as HTMLDetailsElement;\n}\n\n/**\n * Details summary\n */\nexport function summary(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('summary', props, ...content);\n}\n\n/**\n * Dialog element\n */\nexport function dialog(props: DOMProps & { open?: boolean }, ...children: DOMChildren[]): HTMLDialogElement {\n  return createElement('dialog', props, ...children) as HTMLDialogElement;\n}\n", "import { state, effect } from '../../../dist/runtime/index.js';\nimport {\n  vbox, hbox, container, center, scroll, grid,\n  text, button, input, checkbox, radio,\n  h1, h2, h3, strong, em, code,\n  header, footer, section, article,\n  table, thead, tbody, p, tr, th, td,\n  form, textarea, select, option,\n  when, show\n} from '../../../dist/runtime/index.js';\n\nexport default function App() {\n  return container({class: 'name'}, \n      header({className: 'hello'}, [\n        h1({}, 'Prathmesh'),\n        h2({}, 'barot')\n      ]),\n\n      scroll({}, [\n        section({}, [\n          grid({}, [\n            h3({}, 'The Owner'),\n            p({}, 'I am the ower of this store')\n          ])\n        ])\n      ])\n  )\n}", "import { render } from '../../../dist/runtime/index.js';\nimport App from './App.js';\n\nconst root = document.getElementById('root');\nif (root) {\n  render(App, root);\n}\n"],
  "mappings": "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",
  "names": ["text", "container", "container"]
}
