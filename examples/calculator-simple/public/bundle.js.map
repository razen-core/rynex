{
  "version": 3,
  "sources": ["../../../src/runtime/debug.ts", "../../../src/runtime/state.ts", "../../../src/runtime/dom.ts", "../../../src/runtime/renderer.ts", "../../../src/runtime/helpers/layout.ts", "../../../src/runtime/helpers/basic_elements.ts", "../src/App.ts", "../src/index.ts"],
  "sourcesContent": ["/**\n * Rynex Runtime Debugging\n * Debug utilities for development\n */\n\nlet debugEnabled = false;\n\nexport function enableDebug(): void {\n  debugEnabled = true;\n  console.log('[Rynex Debug] Debugging enabled');\n}\n\nexport function disableDebug(): void {\n  debugEnabled = false;\n}\n\nexport function isDebugEnabled(): boolean {\n  return debugEnabled;\n}\n\nexport function debugLog(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.log(`[${timestamp}] [DEBUG:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugWarn(category: string, message: string, data?: any): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.warn(`[${timestamp}] [WARN:${category}] ${message}`, data || '');\n  }\n}\n\nexport function debugError(category: string, message: string, error?: Error): void {\n  if (debugEnabled) {\n    const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n    console.error(`[${timestamp}] [ERROR:${category}] ${message}`, error || '');\n  }\n}\n\n// Enable debug mode if URL has ?debug=true or localStorage has debug flag\nif (typeof window !== 'undefined') {\n  const urlParams = new URLSearchParams(window.location.search);\n  const hasDebugParam = urlParams.get('debug') === 'true';\n  const hasDebugStorage = localStorage.getItem('rynex-debug') === 'true';\n  \n  if (hasDebugParam || hasDebugStorage) {\n    enableDebug();\n  }\n}\n", "/**\n * Rynex State Management\n * Vanilla JavaScript Proxy-based reactive state (no React hooks)\n */\n\nimport { debugLog, debugWarn } from './debug.js';\n\ntype Listener = () => void;\ntype EffectFunction = () => void;\n\n// Track current effect being executed for dependency tracking\nlet currentEffect: EffectFunction | null = null;\nconst effectDependencies = new WeakMap<EffectFunction, Set<any>>();\n\n/**\n * Create a reactive state object using Proxy\n * Any property access is tracked, any property change triggers updates\n */\nexport function state<T extends object>(initialState: T): T {\n  const listeners = new Set<Listener>();\n  const dependencies = new Map<string | symbol, Set<EffectFunction>>();\n\n  const handler: ProxyHandler<T> = {\n    get(target, prop, receiver) {\n      // Track dependency if we're inside an effect\n      if (currentEffect) {\n        if (!dependencies.has(prop)) {\n          dependencies.set(prop, new Set());\n        }\n        dependencies.get(prop)!.add(currentEffect);\n        \n        // Track reverse dependency\n        if (!effectDependencies.has(currentEffect)) {\n          effectDependencies.set(currentEffect, new Set());\n        }\n        effectDependencies.get(currentEffect)!.add(target);\n        \n        debugLog('State', `Tracking dependency: ${String(prop)}`);\n      }\n      \n      return Reflect.get(target, prop, receiver);\n    },\n\n    set(target, prop, value, receiver) {\n      const oldValue = Reflect.get(target, prop, receiver);\n      \n      // Only update if value changed\n      if (Object.is(oldValue, value)) {\n        return true;\n      }\n\n      const result = Reflect.set(target, prop, value, receiver);\n      \n      if (result) {\n        debugLog('State', `Property ${String(prop)} changed from ${oldValue} to ${value}`);\n        \n        // Notify property-specific effects\n        const propEffects = dependencies.get(prop);\n        if (propEffects) {\n          propEffects.forEach(effect => {\n            queueMicrotask(() => {\n              try {\n                effect();\n              } catch (error) {\n                console.error('Error in effect:', error);\n              }\n            });\n          });\n        }\n        \n        // Notify global listeners\n        listeners.forEach(listener => {\n          queueMicrotask(() => {\n            try {\n              listener();\n            } catch (error) {\n              console.error('Error in listener:', error);\n            }\n          });\n        });\n      }\n      \n      return result;\n    }\n  };\n\n  const proxy = new Proxy(initialState, handler);\n  \n  // Store listeners reference for manual subscription\n  (proxy as any).__listeners = listeners;\n  \n  return proxy;\n}\n\n/**\n * Create a computed value that automatically updates when dependencies change\n */\nexport function computed<T>(computeFn: () => T): { value: T } {\n  let cachedValue: T;\n  let isInitialized = false;\n\n  const effectFn: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = effectFn;\n    try {\n      cachedValue = computeFn();\n      isInitialized = true;\n      debugLog('Computed', 'Recomputed value:', cachedValue);\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  // Run once to establish dependencies and get initial value\n  effectFn();\n\n  return {\n    get value() {\n      if (!isInitialized) {\n        effectFn();\n      }\n      return cachedValue;\n    }\n  };\n}\n\n/**\n * Run an effect when reactive dependencies change\n */\nexport function effect(effectFn: EffectFunction): () => void {\n  const wrappedEffect: EffectFunction = () => {\n    const oldEffect = currentEffect;\n    currentEffect = wrappedEffect;\n    try {\n      effectFn();\n    } finally {\n      currentEffect = oldEffect;\n    }\n  };\n\n  // Run immediately to establish dependencies\n  wrappedEffect();\n  \n  // Return cleanup function\n  return () => {\n    const deps = effectDependencies.get(wrappedEffect);\n    if (deps) {\n      deps.clear();\n      effectDependencies.delete(wrappedEffect);\n    }\n  };\n}\n\n/**\n * Subscribe to state changes manually\n */\nexport function subscribe(stateObj: any, listener: Listener): () => void {\n  if (stateObj.__listeners) {\n    stateObj.__listeners.add(listener);\n    debugLog('State', 'Added listener to state');\n    \n    return () => {\n      stateObj.__listeners.delete(listener);\n      debugLog('State', 'Removed listener from state');\n    };\n  }\n  \n  debugWarn('State', 'Object is not a reactive state');\n  return () => {};\n}\n\n/**\n * Batch multiple state updates together\n */\nlet batchDepth = 0;\nconst pendingEffects = new Set<EffectFunction>();\n\nexport function batch(fn: () => void): void {\n  batchDepth++;\n  try {\n    fn();\n  } finally {\n    batchDepth--;\n    if (batchDepth === 0) {\n      // Execute all pending effects\n      pendingEffects.forEach(effect => {\n        queueMicrotask(() => {\n          try {\n            effect();\n          } catch (error) {\n            console.error('Error in batched effect:', error);\n          }\n        });\n      });\n      pendingEffects.clear();\n    }\n  }\n}\n", "/**\n * Rynex DOM Manipulation\n * Direct DOM element creation and manipulation (vanilla JavaScript)\n * No Virtual DOM - just real DOM elements\n */\n\nimport { debugLog } from './debug.js';\n\nexport type DOMChild = HTMLElement | Text | string | number | boolean | null | undefined;\nexport type DOMChildren = DOMChild | DOMChild[];\n\nexport interface DOMProps {\n  [key: string]: any;\n  class?: string;\n  className?: string;\n  id?: string;\n  style?: string | Partial<CSSStyleDeclaration>;\n  onClick?: (event: MouseEvent) => void;\n  onInput?: (event: Event) => void;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  onKeyUp?: (event: KeyboardEvent) => void;\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  ref?: { current: HTMLElement | null };\n}\n\n/**\n * Create a real DOM element (vanilla JavaScript)\n * This is the core function that replaces the h() virtual DOM function\n */\nexport function createElement(\n  tag: string,\n  props: DOMProps | null = null,\n  ...children: DOMChildren[]\n): HTMLElement {\n  const element = document.createElement(tag);\n  \n  // Apply props\n  if (props) {\n    applyProps(element, props);\n  }\n  \n  // Append children\n  appendChildren(element, children);\n  \n  debugLog('DOM', `Created element: ${tag}`);\n  return element;\n}\n\n/**\n * Create a text node\n */\nexport function createTextNode(text: string | number): Text {\n  return document.createTextNode(String(text));\n}\n\n/**\n * Apply properties to a DOM element\n */\nexport function applyProps(element: HTMLElement, props: DOMProps): void {\n  for (const [key, value] of Object.entries(props)) {\n    if (value === null || value === undefined) {\n      continue;\n    }\n    \n    // Handle event listeners\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventName = key.slice(2).toLowerCase();\n      element.addEventListener(eventName, value as EventListener);\n      debugLog('DOM', `Added event listener: ${eventName}`);\n    }\n    // Handle class/className\n    else if (key === 'class' || key === 'className') {\n      element.className = value;\n    }\n    // Handle style\n    else if (key === 'style') {\n      if (typeof value === 'string') {\n        element.setAttribute('style', value);\n      } else if (typeof value === 'object') {\n        Object.assign(element.style, value);\n      }\n    }\n    // Handle ref\n    else if (key === 'ref' && typeof value === 'object' && 'current' in value) {\n      value.current = element;\n    }\n    // Handle special properties\n    else if (key === 'value') {\n      (element as any).value = value;\n    }\n    else if (key === 'checked') {\n      (element as any).checked = value;\n    }\n    // Handle data attributes\n    else if (key.startsWith('data-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle aria attributes\n    else if (key.startsWith('aria-')) {\n      element.setAttribute(key, String(value));\n    }\n    // Handle other attributes\n    else {\n      element.setAttribute(key, String(value));\n    }\n  }\n}\n\n/**\n * Update properties on a DOM element\n */\nexport function updateProps(element: HTMLElement, oldProps: DOMProps, newProps: DOMProps): void {\n  // Remove old props\n  for (const key in oldProps) {\n    if (!(key in newProps)) {\n      removeProp(element, key, oldProps[key]);\n    }\n  }\n  \n  // Add/update new props\n  for (const key in newProps) {\n    if (oldProps[key] !== newProps[key]) {\n      // Remove old event listener if it's an event\n      if (key.startsWith('on') && typeof oldProps[key] === 'function') {\n        const eventName = key.slice(2).toLowerCase();\n        element.removeEventListener(eventName, oldProps[key] as EventListener);\n      }\n      \n      // Apply new prop\n      applyProps(element, { [key]: newProps[key] });\n    }\n  }\n}\n\n/**\n * Remove a property from a DOM element\n */\nexport function removeProp(element: HTMLElement, key: string, value: any): void {\n  if (key.startsWith('on') && typeof value === 'function') {\n    const eventName = key.slice(2).toLowerCase();\n    element.removeEventListener(eventName, value as EventListener);\n  } else if (key === 'class' || key === 'className') {\n    element.className = '';\n  } else if (key === 'style') {\n    element.removeAttribute('style');\n  } else if (key !== 'ref') {\n    element.removeAttribute(key);\n  }\n}\n\n/**\n * Append children to a DOM element\n */\nexport function appendChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  const flatChildren = children.flat(Infinity) as DOMChild[];\n  \n  for (const child of flatChildren) {\n    if (child === null || child === undefined || child === false || child === true) {\n      continue;\n    }\n    \n    if (typeof child === 'string' || typeof child === 'number') {\n      parent.appendChild(createTextNode(child));\n    } else if (child instanceof HTMLElement || child instanceof Text) {\n      parent.appendChild(child);\n    }\n  }\n}\n\n/**\n * Replace all children of an element\n */\nexport function replaceChildren(parent: HTMLElement, children: DOMChildren[]): void {\n  // Clear existing children\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n  \n  // Append new children\n  appendChildren(parent, children);\n}\n\n/**\n * Mount an element to a container\n */\nexport function mount(element: HTMLElement, container: HTMLElement): void {\n  container.appendChild(element);\n  debugLog('DOM', 'Mounted element to container');\n}\n\n/**\n * Unmount an element from its parent\n */\nexport function unmount(element: HTMLElement): void {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n    debugLog('DOM', 'Unmounted element');\n  }\n}\n\n/**\n * Create a ref object for accessing DOM elements\n */\nexport function createRef<T extends HTMLElement = HTMLElement>(): { current: T | null } {\n  return { current: null };\n}\n\n/**\n * Query selector helper\n */\nexport function $(selector: string, parent: HTMLElement | Document = document): HTMLElement | null {\n  return parent.querySelector(selector);\n}\n\n/**\n * Query selector all helper\n */\nexport function $$(selector: string, parent: HTMLElement | Document = document): HTMLElement[] {\n  return Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * Add class to element\n */\nexport function addClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.add(...classNames);\n}\n\n/**\n * Remove class from element\n */\nexport function removeClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.remove(...classNames);\n}\n\n/**\n * Toggle class on element\n */\nexport function toggleClass(element: HTMLElement, className: string, force?: boolean): void {\n  element.classList.toggle(className, force);\n}\n\n/**\n * Set styles on element\n */\nexport function setStyle(element: HTMLElement, styles: Partial<CSSStyleDeclaration>): void {\n  Object.assign(element.style, styles);\n}\n\n/**\n * Set attributes on element\n */\nexport function setAttributes(element: HTMLElement, attrs: Record<string, string>): void {\n  for (const [key, value] of Object.entries(attrs)) {\n    element.setAttribute(key, value);\n  }\n}\n\n/**\n * Add event listener helper\n */\nexport function on<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n  options?: AddEventListenerOptions\n): () => void {\n  element.addEventListener(event, handler as EventListener, options);\n  return () => element.removeEventListener(event, handler as EventListener, options);\n}\n\n/**\n * Remove event listener helper\n */\nexport function off<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (event: HTMLElementEventMap[K]) => void\n): void {\n  element.removeEventListener(event, handler as EventListener);\n}\n", "/**\n * Rynex Renderer\n * Main rendering engine using vanilla JavaScript (no VDOM)\n */\n\nimport { mount, unmount, replaceChildren } from './dom.js';\nimport { subscribe } from './state.js';\nimport { debugLog } from './debug.js';\n\nexport interface ComponentInstance {\n  element: HTMLElement | null;\n  container: HTMLElement | null;\n  update: () => void;\n  unmount: () => void;\n  unsubscribe?: () => void;\n}\n\nconst componentInstances = new WeakMap<Function, ComponentInstance>();\nlet renderCounter = 0;\n\n/**\n * Render a component to a container element\n * Component should return an HTMLElement\n */\nexport function render(component: Function, container: HTMLElement, props: any = {}): ComponentInstance {\n  const instance: ComponentInstance = {\n    element: null,\n    container,\n    update: () => {},\n    unmount: () => {}\n  };\n\n  const update = () => {\n    const renderId = ++renderCounter;\n    debugLog('Renderer', `Render #${renderId} starting`);\n    \n    try {\n      // Execute component function to get DOM element\n      const newElement = component(props) as HTMLElement;\n      debugLog('Renderer', `Render #${renderId} component executed`);\n\n      if (!instance.element) {\n        // Initial mount\n        debugLog('Renderer', `Render #${renderId} initial mount`);\n        mount(newElement, container);\n        instance.element = newElement;\n      } else {\n        // Update - replace old element with new one\n        debugLog('Renderer', `Render #${renderId} updating DOM`);\n        if (instance.element.parentElement) {\n          instance.element.parentElement.replaceChild(newElement, instance.element);\n        }\n        instance.element = newElement;\n      }\n      debugLog('Renderer', `Render #${renderId} complete`);\n    } catch (error) {\n      console.error('Error rendering component:', error);\n    }\n  };\n\n  const unmountFn = () => {\n    if (instance.element) {\n      unmount(instance.element);\n      instance.element = null;\n    }\n    if (instance.unsubscribe) {\n      instance.unsubscribe();\n    }\n  };\n\n  instance.update = update;\n  instance.unmount = unmountFn;\n\n  // Initial render\n  update();\n\n  componentInstances.set(component, instance);\n  return instance;\n}\n\n/**\n * Create a component that auto-updates when state changes\n */\nexport function createComponent(component: Function, stateObj?: any, props: any = {}): HTMLElement {\n  const element = component(props) as HTMLElement;\n  \n  // If state object provided, subscribe to changes and re-render\n  if (stateObj && stateObj.__listeners) {\n    const container = document.createElement('div');\n    container.appendChild(element);\n    \n    subscribe(stateObj, () => {\n      const newElement = component(props) as HTMLElement;\n      replaceChildren(container, [newElement]);\n    });\n    \n    return container;\n  }\n  \n  return element;\n}\n\n/**\n * Mount a component and return cleanup function\n */\nexport function mountComponent(component: Function, container: HTMLElement, props: any = {}): () => void {\n  const instance = render(component, container, props);\n  return () => instance.unmount();\n}\n", "/**\n * Rynex Layout Helpers\n * Layout and positioning components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Vertical box layout (flex column)\n */\nexport function vbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Horizontal box layout (flex row)\n */\nexport function hbox(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Grid layout container\n */\nexport function grid(\n  props: DOMProps & { columns?: number; gap?: string },\n  ...children: DOMChildren[]\n): HTMLElement {\n  const { columns = 1, gap = '1rem', ...restProps } = props;\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gap,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Plain container (div without flex)\n */\nexport function container(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Stack layout with z-index management\n */\nexport function stack(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Center content (both axes)\n */\nexport function center(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Flexible spacer\n */\nexport function spacer(props: DOMProps = {}): HTMLElement {\n  const style = {\n    flex: '1',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style });\n}\n\n/**\n * Flex wrap container\n */\nexport function wrap(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Scrollable container\n */\nexport function scroll(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    overflow: 'auto',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Sticky positioned container\n */\nexport function sticky(props: DOMProps & { top?: string }, ...children: DOMChildren[]): HTMLElement {\n  const { top = '0', ...restProps } = props;\n  const style = {\n    position: 'sticky',\n    top,\n    ...(typeof restProps.style === 'object' ? restProps.style : {})\n  };\n  return createElement('div', { ...restProps, style }, ...children);\n}\n\n/**\n * Fixed positioned container\n */\nexport function fixed(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'fixed',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Absolute positioned container\n */\nexport function absolute(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'absolute',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n\n/**\n * Relative positioned container\n */\nexport function relative(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  const style = {\n    position: 'relative',\n    ...(typeof props.style === 'object' ? props.style : {})\n  };\n  return createElement('div', { ...props, style }, ...children);\n}\n", "/**\n * Rynex Basic Elements\n * Basic HTML elements and components\n */\n\nimport { createElement, DOMProps, DOMChildren } from '../dom.js';\n\n/**\n * Div element (generic container)\n */\nexport function div(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('div', props, ...children);\n}\n\n/**\n * Span element (inline container)\n */\nexport function span(props: DOMProps, ...children: DOMChildren[]): HTMLElement {\n  return createElement('span', props, ...children);\n}\n\n/**\n * Text element\n */\nexport function text(props: DOMProps | string, content?: string): HTMLElement {\n  if (typeof props === 'string') {\n    return createElement('span', {}, props);\n  }\n  return createElement('span', props, content || '');\n}\n\n/**\n * Button element\n */\nexport function button(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('button', props, ...content);\n}\n\n/**\n * Input element\n */\nexport function input(props: DOMProps): HTMLInputElement {\n  return createElement('input', props) as HTMLInputElement;\n}\n\n/**\n * Image element\n */\nexport function image(props: DOMProps & { src: string; alt?: string; lazy?: boolean }): HTMLImageElement {\n  const imgProps = { ...props };\n  if (props.lazy) {\n    imgProps.loading = 'lazy';\n    delete imgProps.lazy;\n  }\n  return createElement('img', imgProps) as HTMLImageElement;\n}\n\n/**\n * Link/anchor element\n */\nexport function link(props: DOMProps & { href: string }, ...children: DOMChildren[]): HTMLAnchorElement {\n  return createElement('a', props, ...children) as HTMLAnchorElement;\n}\n\n/**\n * Label element\n */\nexport function label(props: DOMProps & { htmlFor?: string }, ...content: DOMChildren[]): HTMLLabelElement {\n  return createElement('label', props, ...content) as HTMLLabelElement;\n}\n\n/**\n * Paragraph element\n */\nexport function p(props: DOMProps, ...content: DOMChildren[]): HTMLParagraphElement {\n  return createElement('p', props, ...content) as HTMLParagraphElement;\n}\n\n/**\n * List element with optimized rendering\n */\nexport function list<T>(\n  props: DOMProps & {\n    items: T[];\n    renderItem: (item: T, index: number) => HTMLElement;\n    keyExtractor?: (item: T, index: number) => string | number;\n  }\n): HTMLElement {\n  const { items, renderItem, keyExtractor, ...restProps } = props;\n  const children = items.map((item, index) => {\n    const child = renderItem(item, index);\n    if (keyExtractor) {\n      child.dataset.key = String(keyExtractor(item, index));\n    }\n    return child;\n  });\n  return createElement('div', restProps, ...children);\n}\n\n/**\n * Unordered list\n */\nexport function ul(props: DOMProps, ...children: DOMChildren[]): HTMLUListElement {\n  return createElement('ul', props, ...children) as HTMLUListElement;\n}\n\n/**\n * Ordered list\n */\nexport function ol(props: DOMProps, ...children: DOMChildren[]): HTMLOListElement {\n  return createElement('ol', props, ...children) as HTMLOListElement;\n}\n\n/**\n * List item\n */\nexport function li(props: DOMProps, ...content: DOMChildren[]): HTMLLIElement {\n  return createElement('li', props, ...content) as HTMLLIElement;\n}\n\n/**\n * Horizontal rule\n */\nexport function hr(props: DOMProps = {}): HTMLHRElement {\n  return createElement('hr', props) as HTMLHRElement;\n}\n\n/**\n * Line break\n */\nexport function br(props: DOMProps = {}): HTMLBRElement {\n  return createElement('br', props) as HTMLBRElement;\n}\n\n/**\n * Description list\n */\nexport function dl(props: DOMProps, ...children: DOMChildren[]): HTMLDListElement {\n  return createElement('dl', props, ...children) as HTMLDListElement;\n}\n\n/**\n * Description term\n */\nexport function dt(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dt', props, ...content);\n}\n\n/**\n * Description definition\n */\nexport function dd(props: DOMProps, ...content: DOMChildren[]): HTMLElement {\n  return createElement('dd', props, ...content);\n}\n", "import { state, effect } from '../../../dist/runtime/index.js';\nimport { vbox, hbox, text, button, center } from '../../../dist/runtime/index.js';\n\nexport default function Calculator() {\n  // Simple state - just one object\n  const $ = state({\n    display: '0',\n    current: '',\n    operator: '',\n    previous: ''\n  });\n\n  // Helper functions\n  const clear = () => {\n    $.display = '0';\n    $.current = '';\n    $.operator = '';\n    $.previous = '';\n  };\n\n  const appendNumber = (num: string) => {\n    if ($.display === '0') $.display = num;\n    else $.display += num;\n    $.current = $.display;\n  };\n\n  const setOperator = (op: string) => {\n    $.operator = op;\n    $.previous = $.current;\n    $.display = '0';\n    $.current = '';\n  };\n\n  const calculate = () => {\n    const prev = parseFloat($.previous);\n    const curr = parseFloat($.current);\n    let result = 0;\n\n    if ($.operator === '+') result = prev + curr;\n    if ($.operator === '-') result = prev - curr;\n    if ($.operator === '\u00D7') result = prev * curr;\n    if ($.operator === '\u00F7') result = prev / curr;\n\n    $.display = String(result);\n    $.current = String(result);\n    $.operator = '';\n  };\n\n  // UI Elements\n  const display = text($.display);\n\n  // Auto-update display\n  effect(() => {\n    display.textContent = $.display;\n  });\n\n  // Build UI - Simple and clean!\n  return center({ style: { height: '100vh', background: '#1a1a2e' } },\n    vbox({ class: 'calculator' },\n      display,\n      hbox({ class: 'row' },\n        button({ onClick: clear }, 'C'),\n        button({ onClick: () => appendNumber('0') }, '0'),\n        button({ onClick: () => $.display = $.display.slice(0, -1) || '0' }, '\u232B'),\n        button({ onClick: () => setOperator('\u00F7') }, '\u00F7')\n      ),\n      hbox({ class: 'row' },\n        button({ onClick: () => appendNumber('7') }, '7'),\n        button({ onClick: () => appendNumber('8') }, '8'),\n        button({ onClick: () => appendNumber('9') }, '9'),\n        button({ onClick: () => setOperator('\u00D7') }, '\u00D7')\n      ),\n      hbox({ class: 'row' },\n        button({ onClick: () => appendNumber('4') }, '4'),\n        button({ onClick: () => appendNumber('5') }, '5'),\n        button({ onClick: () => appendNumber('6') }, '6'),\n        button({ onClick: () => setOperator('-') }, '-')\n      ),\n      hbox({ class: 'row' },\n        button({ onClick: () => appendNumber('1') }, '1'),\n        button({ onClick: () => appendNumber('2') }, '2'),\n        button({ onClick: () => appendNumber('3') }, '3'),\n        button({ onClick: () => setOperator('+') }, '+')\n      ),\n      hbox({ class: 'row' },\n        button({ onClick: () => appendNumber('.') }, '.'),\n        button({ onClick: calculate, class: 'equals' }, '=')\n      )\n    )\n  );\n}\n\n// Inline styles - no separate CSS file needed!\nconst style = document.createElement('style');\nstyle.textContent = `\n  * { margin: 0; padding: 0; box-sizing: border-box; }\n  \n  .calculator {\n    background: #16213e;\n    padding: 20px;\n    border-radius: 20px;\n    box-shadow: 0 10px 40px rgba(0,0,0,0.5);\n    gap: 10px;\n    width: 320px;\n  }\n  \n  .calculator > span:first-child {\n    background: #0f3460;\n    color: #fff;\n    font-size: 2.5rem;\n    padding: 20px;\n    text-align: right;\n    border-radius: 10px;\n    min-height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    font-family: 'Courier New', monospace;\n  }\n  \n  .row {\n    gap: 10px;\n  }\n  \n  .row button {\n    flex: 1;\n    padding: 25px;\n    font-size: 1.5rem;\n    border: none;\n    border-radius: 10px;\n    background: #533483;\n    color: white;\n    cursor: pointer;\n    transition: all 0.2s;\n    font-weight: 600;\n  }\n  \n  .row button:hover {\n    background: #6c4a9e;\n    transform: scale(1.05);\n  }\n  \n  .row button:active {\n    transform: scale(0.95);\n  }\n  \n  .equals {\n    flex: 2 !important;\n    background: #e94560 !important;\n  }\n  \n  .equals:hover {\n    background: #ff5577 !important;\n  }\n`;\ndocument.head.appendChild(style);\n", "import { render } from '../../../dist/runtime/index.js';\nimport Calculator from './App.js';\n\nrender(Calculator, document.getElementById('root')!);\n"],
  "mappings": "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",
  "names": ["effect", "text", "container", "container", "style", "style", "$"]
}
